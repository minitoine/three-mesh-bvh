{"mappings":"IS2BI,EAAU,EAAQ,EAAO,EAAM,EAAO,EAAK,EAAQ,EAAO,EAC1D,EAAiB,EAAe,EAAS,EACzC,E,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,W,I,E,A,G,E,GR3BJ,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,G,E,Q,S,C,C,C,MCT4K,CAApB,CAAA,EAAA,OAAA,CAAlF,EAAA,OAAA,EAEgC,CAFsE,EAAE,WAAW,SAAS,EAAE,CAAC,EAAuB,OAArB,EAAE,WAAW,CAAC,EAAE,GAAG,EAAS,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,OAAO,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,SAAS,aAAa,CAAC,MAAO,CAAA,EAAE,KAAK,CAAC,OAAO,CAAC,uEAAuE,EAAE,gBAAgB,CAAC,QAAQ,SAAS,CAAC,EAAE,EAAE,cAAc,GAClgB,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,EAAG,AAAA,CAAA,aAAa,IAAA,EAAM,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,MAAM,OAAO,SA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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/stats.js/build/stats.min.js","src/workers/utils/WorkerBase.js","src/workers/GenerateMeshBVHWorker.js","node_modules/@parcel/runtime-js/lib/runtime-b9d8bae84a2a3c49.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","src/objects/MeshBVHHelper.js","node_modules/@parcel/runtime-js/lib/runtime-bc1d80e38da6d370.js","example/asyncGenerate.js","src/workers/ParallelMeshBVHWorker.js","node_modules/@parcel/runtime-js/lib/runtime-4c1dd98322b7a94f.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire4485\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire4485\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nparcelRegister(\"c8CJQ\", function(module, exports) {\n// stats.js - http://github.com/mrdoob/stats.js\n(function(f, e) {\n    module.exports = e();\n})(module.exports, function() {\n    var f = function() {\n        function e(a) {\n            c.appendChild(a.dom);\n            return a;\n        }\n        function u(a) {\n            for(var d = 0; d < c.children.length; d++)c.children[d].style.display = d === a ? \"block\" : \"none\";\n            l = a;\n        }\n        var l = 0, c = document.createElement(\"div\");\n        c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n        c.addEventListener(\"click\", function(a) {\n            a.preventDefault();\n            u(++l % c.children.length);\n        }, !1);\n        var k = (performance || Date).now(), g = k, a = 0, r = e(new f.Panel(\"FPS\", \"#0ff\", \"#002\")), h = e(new f.Panel(\"MS\", \"#0f0\", \"#020\"));\n        if (self.performance && self.performance.memory) var t = e(new f.Panel(\"MB\", \"#f08\", \"#201\"));\n        u(0);\n        return {\n            REVISION: 16,\n            dom: c,\n            addPanel: e,\n            showPanel: u,\n            begin: function() {\n                k = (performance || Date).now();\n            },\n            end: function() {\n                a++;\n                var c = (performance || Date).now();\n                h.update(c - k, 200);\n                if (c > g + 1E3 && (r.update(1E3 * a / (c - g), 100), g = c, a = 0, t)) {\n                    var d = performance.memory;\n                    t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                }\n                return c;\n            },\n            update: function() {\n                k = this.end();\n            },\n            domElement: c,\n            setMode: u\n        };\n    };\n    f.Panel = function(e, f, l) {\n        var c = Infinity, k = 0, g = Math.round, a = g(window.devicePixelRatio || 1), r = 80 * a, h = 48 * a, t = 3 * a, v = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n        q.width = r;\n        q.height = h;\n        q.style.cssText = \"width:80px;height:48px\";\n        var b = q.getContext(\"2d\");\n        b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n        b.textBaseline = \"top\";\n        b.fillStyle = l;\n        b.fillRect(0, 0, r, h);\n        b.fillStyle = f;\n        b.fillText(e, t, v);\n        b.fillRect(d, m, n, p);\n        b.fillStyle = l;\n        b.globalAlpha = .9;\n        b.fillRect(d, m, n, p);\n        return {\n            dom: q,\n            update: function(h, w) {\n                c = Math.min(c, h);\n                k = Math.max(k, h);\n                b.fillStyle = l;\n                b.globalAlpha = 1;\n                b.fillRect(0, 0, r, m);\n                b.fillStyle = f;\n                b.fillText(g(h) + \" \" + e + \" (\" + g(c) + \"-\" + g(k) + \")\", t, v);\n                b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                b.fillRect(d + n - a, m, a, p);\n                b.fillStyle = l;\n                b.globalAlpha = .9;\n                b.fillRect(d + n - a, m, a, g((1 - h / w) * p));\n            }\n        };\n    };\n    return f;\n});\n\n});\n\nparcelRegister(\"77YCt\", function(module, exports) {\n\n$parcel$export(module.exports, \"WorkerBase\", () => $5308359e4b33977a$export$8dbf7c43841b75b7);\nclass $5308359e4b33977a$export$8dbf7c43841b75b7 {\n    constructor(worker){\n        this.name = \"WorkerBase\";\n        this.running = false;\n        this.worker = worker;\n        this.worker.onerror = (e)=>{\n            if (e.message) throw new Error(`${this.name}: Could not create Web Worker with error \"${e.message}\"`);\n            else throw new Error(`${this.name}: Could not create Web Worker.`);\n        };\n    }\n    runTask() {}\n    generate(...args) {\n        if (this.running) throw new Error(\"GenerateMeshBVHWorker: Already running job.\");\n        if (this.worker === null) throw new Error(\"GenerateMeshBVHWorker: Worker has been disposed.\");\n        this.running = true;\n        const promise = this.runTask(this.worker, ...args);\n        promise.finally(()=>{\n            this.running = false;\n        });\n        return promise;\n    }\n    dispose() {\n        this.worker.terminate();\n        this.worker = null;\n    }\n}\n\n});\n\nparcelRegister(\"8todg\", function(module, exports) {\n\n$parcel$export(module.exports, \"GenerateMeshBVHWorker\", () => $62b3d05905f83386$export$426cc6213ad628cf);\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $ff8ed = parcelRequire(\"ff8ed\");\n\nvar $77YCt = parcelRequire(\"77YCt\");\n\nclass $62b3d05905f83386$export$426cc6213ad628cf extends (0, $77YCt.WorkerBase) {\n    constructor(){\n        const worker = new Worker((parcelRequire(\"bSef7\")));\n        super(worker);\n        this.name = \"GenerateMeshBVHWorker\";\n    }\n    runTask(worker, geometry, options = {}) {\n        return new Promise((resolve, reject)=>{\n            if (geometry.getAttribute(\"position\").isInterleavedBufferAttribute || geometry.index && geometry.index.isInterleavedBufferAttribute) throw new Error(\"GenerateMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.\");\n            worker.onerror = (e)=>{\n                reject(new Error(`GenerateMeshBVHWorker: ${e.message}`));\n            };\n            worker.onmessage = (e)=>{\n                const { data: data } = e;\n                if (data.error) {\n                    reject(new Error(data.error));\n                    worker.onmessage = null;\n                } else if (data.serialized) {\n                    const { serialized: serialized, position: position } = data;\n                    const bvh = (0, $ff8ed.MeshBVH).deserialize(serialized, geometry, {\n                        setIndex: false\n                    });\n                    const boundsOptions = Object.assign({\n                        setBoundingBox: true\n                    }, options);\n                    // we need to replace the arrays because they're neutered entirely by the\n                    // webworker transfer.\n                    geometry.attributes.position.array = position;\n                    if (serialized.index) {\n                        if (geometry.index) geometry.index.array = serialized.index;\n                        else {\n                            const newIndex = new (0, $ilwiq.BufferAttribute)(serialized.index, 1, false);\n                            geometry.setIndex(newIndex);\n                        }\n                    }\n                    if (boundsOptions.setBoundingBox) geometry.boundingBox = bvh.getBoundingBox(new (0, $ilwiq.Box3)());\n                    if (options.onProgress) options.onProgress(data.progress);\n                    resolve(bvh);\n                    worker.onmessage = null;\n                } else if (options.onProgress) options.onProgress(data.progress);\n            };\n            const index = geometry.index ? geometry.index.array : null;\n            const position = geometry.attributes.position.array;\n            const transferable = [\n                position\n            ];\n            if (index) transferable.push(index);\n            worker.postMessage({\n                index: index,\n                position: position,\n                options: {\n                    ...options,\n                    onProgress: null,\n                    includedProgressCallback: Boolean(options.onProgress),\n                    groups: [\n                        ...geometry.groups\n                    ]\n                }\n            }, transferable.map((arr)=>arr.buffer).filter((v)=>typeof SharedArrayBuffer === \"undefined\" || !(v instanceof SharedArrayBuffer)));\n        });\n    }\n}\n\n});\nparcelRegister(\"bSef7\", function(module, exports) {\n\nvar $7ryUf = parcelRequire(\"7ryUf\");\nlet $8a4fc930af686efe$var$url = new URL(\"generateMeshBVH.worker.17f4c1c5.js\", import.meta.url);\nmodule.exports = $7ryUf($8a4fc930af686efe$var$url.toString(), $8a4fc930af686efe$var$url.origin, true);\n\n});\nparcelRegister(\"7ryUf\", function(module, exports) {\n\"use strict\";\nmodule.exports = function(workerUrl, origin, isESM) {\n    if (origin === self.location.origin) // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n    else {\n        // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n        var source = isESM ? \"import \" + JSON.stringify(workerUrl) + \";\" : \"importScripts(\" + JSON.stringify(workerUrl) + \");\";\n        return URL.createObjectURL(new Blob([\n            source\n        ], {\n            type: \"application/javascript\"\n        }));\n    }\n};\n\n});\n\n\n\nparcelRegister(\"5ca9G\", function(module, exports) {\n\n$parcel$export(module.exports, \"MeshBVHHelper\", () => $3c85f35a8c29fa9b$export$e57d74bcb7e3bec5);\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $aw71y = parcelRequire(\"aw71y\");\n\nvar $ff8ed = parcelRequire(\"ff8ed\");\nconst $3c85f35a8c29fa9b$var$boundingBox = /* @__PURE__ */ new (0, $ilwiq.Box3)();\nclass $3c85f35a8c29fa9b$var$MeshBVHRootHelper extends (0, $ilwiq.Object3D) {\n    get isMesh() {\n        return !this.displayEdges;\n    }\n    get isLineSegments() {\n        return this.displayEdges;\n    }\n    get isLine() {\n        return this.displayEdges;\n    }\n    constructor(bvh, material, depth = 10, group = 0){\n        super();\n        this.material = material;\n        this.geometry = new (0, $ilwiq.BufferGeometry)();\n        this.name = \"MeshBVHRootHelper\";\n        this.depth = depth;\n        this.displayParents = false;\n        this.bvh = bvh;\n        this.displayEdges = true;\n        this._group = group;\n    }\n    raycast() {}\n    update() {\n        const geometry = this.geometry;\n        const boundsTree = this.bvh;\n        const group = this._group;\n        geometry.dispose();\n        this.visible = false;\n        if (boundsTree) {\n            // count the number of bounds required\n            const targetDepth = this.depth - 1;\n            const displayParents = this.displayParents;\n            let boundsCount = 0;\n            boundsTree.traverse((depth, isLeaf)=>{\n                if (depth >= targetDepth || isLeaf) {\n                    boundsCount++;\n                    return true;\n                } else if (displayParents) boundsCount++;\n            }, group);\n            // fill in the position buffer with the bounds corners\n            let posIndex = 0;\n            const positionArray = new Float32Array(24 * boundsCount);\n            boundsTree.traverse((depth, isLeaf, boundingData)=>{\n                const terminate = depth >= targetDepth || isLeaf;\n                if (terminate || displayParents) {\n                    (0, $aw71y.arrayToBox)(0, boundingData, $3c85f35a8c29fa9b$var$boundingBox);\n                    const { min: min, max: max } = $3c85f35a8c29fa9b$var$boundingBox;\n                    for(let x = -1; x <= 1; x += 2){\n                        const xVal = x < 0 ? min.x : max.x;\n                        for(let y = -1; y <= 1; y += 2){\n                            const yVal = y < 0 ? min.y : max.y;\n                            for(let z = -1; z <= 1; z += 2){\n                                const zVal = z < 0 ? min.z : max.z;\n                                positionArray[posIndex + 0] = xVal;\n                                positionArray[posIndex + 1] = yVal;\n                                positionArray[posIndex + 2] = zVal;\n                                posIndex += 3;\n                            }\n                        }\n                    }\n                    return terminate;\n                }\n            }, group);\n            let indexArray;\n            let indices;\n            if (this.displayEdges) // fill in the index buffer to point to the corner points\n            indices = new Uint8Array([\n                // x axis\n                0,\n                4,\n                1,\n                5,\n                2,\n                6,\n                3,\n                7,\n                // y axis\n                0,\n                2,\n                1,\n                3,\n                4,\n                6,\n                5,\n                7,\n                // z axis\n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7\n            ]);\n            else indices = new Uint8Array([\n                // X-, X+\n                0,\n                1,\n                2,\n                2,\n                1,\n                3,\n                4,\n                6,\n                5,\n                6,\n                7,\n                5,\n                // Y-, Y+\n                1,\n                4,\n                5,\n                0,\n                4,\n                1,\n                2,\n                3,\n                6,\n                3,\n                7,\n                6,\n                // Z-, Z+\n                0,\n                2,\n                4,\n                2,\n                6,\n                4,\n                1,\n                5,\n                3,\n                3,\n                5,\n                7\n            ]);\n            if (positionArray.length > 65535) indexArray = new Uint32Array(indices.length * boundsCount);\n            else indexArray = new Uint16Array(indices.length * boundsCount);\n            const indexLength = indices.length;\n            for(let i = 0; i < boundsCount; i++){\n                const posOffset = i * 8;\n                const indexOffset = i * indexLength;\n                for(let j = 0; j < indexLength; j++)indexArray[indexOffset + j] = posOffset + indices[j];\n            }\n            // update the geometry\n            geometry.setIndex(new (0, $ilwiq.BufferAttribute)(indexArray, 1, false));\n            geometry.setAttribute(\"position\", new (0, $ilwiq.BufferAttribute)(positionArray, 3, false));\n            this.visible = true;\n        }\n    }\n}\nclass $3c85f35a8c29fa9b$export$e57d74bcb7e3bec5 extends (0, $ilwiq.Group) {\n    get color() {\n        return this.edgeMaterial.color;\n    }\n    get opacity() {\n        return this.edgeMaterial.opacity;\n    }\n    set opacity(v) {\n        this.edgeMaterial.opacity = v;\n        this.meshMaterial.opacity = v;\n    }\n    constructor(mesh = null, bvh = null, depth = 10){\n        // handle bvh, depth signature\n        if (mesh instanceof (0, $ff8ed.MeshBVH)) {\n            depth = bvh || 10;\n            bvh = mesh;\n            mesh = null;\n        }\n        // handle mesh, depth signature\n        if (typeof bvh === \"number\") {\n            depth = bvh;\n            bvh = null;\n        }\n        super();\n        this.name = \"MeshBVHHelper\";\n        this.depth = depth;\n        this.mesh = mesh;\n        this.bvh = bvh;\n        this.displayParents = false;\n        this.displayEdges = true;\n        this._roots = [];\n        const edgeMaterial = new (0, $ilwiq.LineBasicMaterial)({\n            color: 0x00FF88,\n            transparent: true,\n            opacity: 0.3,\n            depthWrite: false\n        });\n        const meshMaterial = new (0, $ilwiq.MeshBasicMaterial)({\n            color: 0x00FF88,\n            transparent: true,\n            opacity: 0.3,\n            depthWrite: false\n        });\n        meshMaterial.color = edgeMaterial.color;\n        this.edgeMaterial = edgeMaterial;\n        this.meshMaterial = meshMaterial;\n        this.update();\n    }\n    update() {\n        const bvh = this.bvh || this.mesh.geometry.boundsTree;\n        const totalRoots = bvh ? bvh._roots.length : 0;\n        while(this._roots.length > totalRoots){\n            const root = this._roots.pop();\n            root.geometry.dispose();\n            this.remove(root);\n        }\n        for(let i = 0; i < totalRoots; i++){\n            const { depth: depth, edgeMaterial: edgeMaterial, meshMaterial: meshMaterial, displayParents: displayParents, displayEdges: displayEdges } = this;\n            if (i >= this._roots.length) {\n                const root = new $3c85f35a8c29fa9b$var$MeshBVHRootHelper(bvh, edgeMaterial, depth, i);\n                this.add(root);\n                this._roots.push(root);\n            }\n            const root = this._roots[i];\n            root.bvh = bvh;\n            root.depth = depth;\n            root.displayParents = displayParents;\n            root.displayEdges = displayEdges;\n            root.material = displayEdges ? edgeMaterial : meshMaterial;\n            root.update();\n        }\n    }\n    updateMatrixWorld(...args) {\n        const mesh = this.mesh;\n        const parent = this.parent;\n        if (mesh !== null) {\n            mesh.updateWorldMatrix(true, false);\n            if (parent) this.matrix.copy(parent.matrixWorld).invert().multiply(mesh.matrixWorld);\n            else this.matrix.copy(mesh.matrixWorld);\n            this.matrix.decompose(this.position, this.quaternion, this.scale);\n        }\n        super.updateMatrixWorld(...args);\n    }\n    copy(source) {\n        this.depth = source.depth;\n        this.mesh = source.mesh;\n        this.bvh = source.bvh;\n        this.opacity = source.opacity;\n        this.color.copy(source.color);\n    }\n    clone() {\n        return new $3c85f35a8c29fa9b$export$e57d74bcb7e3bec5(this.mesh, this.bvh, this.depth);\n    }\n    dispose() {\n        this.edgeMaterial.dispose();\n        this.meshMaterial.dispose();\n        const children = this.children;\n        for(let i = 0, l = children.length; i < l; i++)children[i].geometry.dispose();\n    }\n}\nclass $3c85f35a8c29fa9b$export$5ead38ed5c75a1c8 extends $3c85f35a8c29fa9b$export$e57d74bcb7e3bec5 {\n    constructor(...args){\n        super(...args);\n        console.warn(\"MeshBVHVisualizer: MeshBVHVisualizer has been deprecated. Use MeshBVHHelper, instead.\");\n    }\n}\n\n});\n\nvar $043d8c883efbad31$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"ggXQv\",\"asyncGenerate.c8e6bcbb.js\",\"6J6WW\",\"generateMeshBVH.worker.17f4c1c5.js\",\"acVmZ\",\"generateMeshBVH.worker.aad48e6e.js\",\"8UXAC\",\"parallelMeshBVH.worker.03387c6a.js\",\"acVmZ\",\"generateMeshBVH.worker.aad48e6e.js\",\"gr8Yf\",\"asyncGenerate.22609466.js\",\"j19h5\",\"asyncGenerate.e8b1599c.js\",\"30Pwg\",\"asyncGenerate.77ce35af.js\"]'));\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $c8CJQ = parcelRequire(\"c8CJQ\");\n\nvar $jiuw3 = parcelRequire(\"jiuw3\");\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $ff8ed = parcelRequire(\"ff8ed\");\n\nvar $77YCt = parcelRequire(\"77YCt\");\n\nvar $2zRsl = parcelRequire(\"2zRsl\");\n\nvar $8todg = parcelRequire(\"8todg\");\n\nvar $aBE3W = parcelRequire(\"aBE3W\");\nconst $3e80fdad4db32d0c$var$DEFAULT_WORKER_COUNT = typeof navigator !== \"undefined\" ? navigator.hardwareConcurrency : 4;\nvar $d34d752c9645d4fe$exports = {};\n\nvar $7ryUf = parcelRequire(\"7ryUf\");\nlet $d34d752c9645d4fe$var$url = new URL(\"parallelMeshBVH.worker.03387c6a.js\", import.meta.url);\n$d34d752c9645d4fe$exports = $7ryUf($d34d752c9645d4fe$var$url.toString(), $d34d752c9645d4fe$var$url.origin, true);\n\n\nclass $3e80fdad4db32d0c$var$_ParallelMeshBVHWorker extends (0, $77YCt.WorkerBase) {\n    constructor(){\n        const worker = new Worker($d34d752c9645d4fe$exports);\n        super(worker);\n        this.name = \"ParallelMeshBVHWorker\";\n        this.maxWorkerCount = Math.max($3e80fdad4db32d0c$var$DEFAULT_WORKER_COUNT, 4);\n        if (!(0, $2zRsl.isSharedArrayBufferSupported)()) throw new Error(\"ParallelMeshBVHWorker: Shared Array Buffers are not supported.\");\n    }\n    runTask(worker, geometry, options = {}) {\n        return new Promise((resolve, reject)=>{\n            if (!geometry.index && !options.indirect) (0, $aBE3W.ensureIndex)(geometry, options);\n            if (geometry.getAttribute(\"position\").isInterleavedBufferAttribute || geometry.index && geometry.index.isInterleavedBufferAttribute) throw new Error(\"ParallelMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.\");\n            worker.onerror = (e)=>{\n                reject(new Error(`ParallelMeshBVHWorker: ${e.message}`));\n            };\n            worker.onmessage = (e)=>{\n                const { data: data } = e;\n                if (data.error) {\n                    reject(new Error(data.error));\n                    worker.onmessage = null;\n                } else if (data.serialized) {\n                    const { serialized: serialized, position: position } = data;\n                    const bvh = (0, $ff8ed.MeshBVH).deserialize(serialized, geometry, {\n                        setIndex: false\n                    });\n                    const boundsOptions = {\n                        setBoundingBox: true,\n                        ...options\n                    };\n                    // we need to replace the arrays because they're neutered entirely by the\n                    // webworker transfer.\n                    geometry.attributes.position.array = position;\n                    if (serialized.index) {\n                        if (geometry.index) geometry.index.array = serialized.index;\n                        else {\n                            const newIndex = new (0, $ilwiq.BufferAttribute)(serialized.index, 1, false);\n                            geometry.setIndex(newIndex);\n                        }\n                    }\n                    if (boundsOptions.setBoundingBox) geometry.boundingBox = bvh.getBoundingBox(new (0, $ilwiq.Box3)());\n                    if (options.onProgress) options.onProgress(data.progress);\n                    resolve(bvh);\n                    worker.onmessage = null;\n                } else if (options.onProgress) options.onProgress(data.progress);\n            };\n            const index = geometry.index ? geometry.index.array : null;\n            const position = geometry.attributes.position.array;\n            worker.postMessage({\n                operation: \"BUILD_BVH\",\n                maxWorkerCount: this.maxWorkerCount,\n                index: (0, $2zRsl.convertToBufferType)(index, SharedArrayBuffer),\n                position: (0, $2zRsl.convertToBufferType)(position, SharedArrayBuffer),\n                options: {\n                    ...options,\n                    onProgress: null,\n                    includedProgressCallback: Boolean(options.onProgress),\n                    groups: [\n                        ...geometry.groups\n                    ]\n                }\n            });\n        });\n    }\n}\nclass $3e80fdad4db32d0c$export$1369cce09af89668 {\n    constructor(){\n        if ((0, $2zRsl.isSharedArrayBufferSupported)()) return new $3e80fdad4db32d0c$var$_ParallelMeshBVHWorker();\n        else {\n            console.warn(\"ParallelMeshBVHWorker: SharedArrayBuffers not supported. Falling back to single-threaded GenerateMeshBVHWorker.\");\n            const object = new (0, $8todg.GenerateMeshBVHWorker)();\n            object.maxWorkerCount = $3e80fdad4db32d0c$var$DEFAULT_WORKER_COUNT;\n            return object;\n        }\n    }\n}\n\n\n\nvar $Mleu6 = parcelRequire(\"Mleu6\");\nvar $ff8ed = parcelRequire(\"ff8ed\");\nvar $5ca9G = parcelRequire(\"5ca9G\");\n// Parallel BVH generation is only supported with SharedArrayBuffer\nconst $09b28d582cee5bbc$var$sharedArrayBufferSupported = typeof SharedArrayBuffer !== \"undefined\";\nconst $09b28d582cee5bbc$var$params = {\n    useWebWorker: true,\n    maxWorkerCount: $09b28d582cee5bbc$var$sharedArrayBufferSupported ? navigator.hardwareConcurrency : 1,\n    strategy: (0, $Mleu6.CENTER),\n    radius: 1,\n    tube: 0.3,\n    tubularSegments: 500,\n    radialSegments: 500,\n    p: 3,\n    q: 5,\n    displayHelper: false,\n    helperDepth: 10\n};\nlet $09b28d582cee5bbc$var$renderer, $09b28d582cee5bbc$var$camera, $09b28d582cee5bbc$var$scene, $09b28d582cee5bbc$var$knot, $09b28d582cee5bbc$var$clock, $09b28d582cee5bbc$var$gui, $09b28d582cee5bbc$var$helper, $09b28d582cee5bbc$var$group, $09b28d582cee5bbc$var$stats;\nlet $09b28d582cee5bbc$var$outputContainer, $09b28d582cee5bbc$var$loadContainer, $09b28d582cee5bbc$var$loadBar, $09b28d582cee5bbc$var$loadText;\nlet $09b28d582cee5bbc$var$bvhGenerationWorker;\nlet $09b28d582cee5bbc$var$generating = false;\n$09b28d582cee5bbc$var$init();\n$09b28d582cee5bbc$var$render();\nfunction $09b28d582cee5bbc$var$init() {\n    const bgColor = 0xffca28;\n    $09b28d582cee5bbc$var$outputContainer = document.getElementById(\"output\");\n    $09b28d582cee5bbc$var$loadContainer = document.getElementById(\"loading-container\");\n    $09b28d582cee5bbc$var$loadBar = document.querySelector(\"#loading-container .bar\");\n    $09b28d582cee5bbc$var$loadText = document.querySelector(\"#loading-container .text\");\n    // renderer setup\n    $09b28d582cee5bbc$var$renderer = new $ilwiq.WebGLRenderer({\n        antialias: true\n    });\n    $09b28d582cee5bbc$var$renderer.setPixelRatio(window.devicePixelRatio);\n    $09b28d582cee5bbc$var$renderer.setSize(window.innerWidth, window.innerHeight);\n    $09b28d582cee5bbc$var$renderer.setClearColor(bgColor, 1);\n    $09b28d582cee5bbc$var$renderer.outputEncoding = $ilwiq.sRGBEncoding;\n    document.body.appendChild($09b28d582cee5bbc$var$renderer.domElement);\n    // scene setup\n    $09b28d582cee5bbc$var$scene = new $ilwiq.Scene();\n    $09b28d582cee5bbc$var$scene.fog = new $ilwiq.Fog(0xffca28, 20, 60);\n    const light = new $ilwiq.DirectionalLight(0xffffff, 1);\n    light.position.set(1, 1, 1);\n    $09b28d582cee5bbc$var$scene.add(light);\n    $09b28d582cee5bbc$var$scene.add(new $ilwiq.AmbientLight(0xb0bec5, 0.8));\n    // camera setup\n    $09b28d582cee5bbc$var$camera = new $ilwiq.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 50);\n    $09b28d582cee5bbc$var$camera.position.set(0, 0, 4);\n    $09b28d582cee5bbc$var$camera.far = 100;\n    $09b28d582cee5bbc$var$camera.updateProjectionMatrix();\n    $09b28d582cee5bbc$var$clock = new $ilwiq.Clock();\n    // stats setup\n    $09b28d582cee5bbc$var$stats = new (0, (/*@__PURE__*/$parcel$interopDefault($c8CJQ)))();\n    document.body.appendChild($09b28d582cee5bbc$var$stats.dom);\n    $09b28d582cee5bbc$var$group = new $ilwiq.Group();\n    $09b28d582cee5bbc$var$scene.add($09b28d582cee5bbc$var$group);\n    for(let i = 0; i < 400; i++){\n        const sphere = new $ilwiq.Mesh(new $ilwiq.SphereGeometry(1, 32, 32), new $ilwiq.MeshBasicMaterial());\n        sphere.position.set(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5).multiplyScalar(70);\n        sphere.scale.setScalar(Math.random() * 0.3 + 0.1);\n        $09b28d582cee5bbc$var$group.add(sphere);\n    }\n    $09b28d582cee5bbc$var$bvhGenerationWorker = new (0, $3e80fdad4db32d0c$export$1369cce09af89668)();\n    window.WORKER = $09b28d582cee5bbc$var$bvhGenerationWorker;\n    $09b28d582cee5bbc$var$gui = new (0, $jiuw3.GUI)();\n    const helperFolder = $09b28d582cee5bbc$var$gui.addFolder(\"helper\");\n    helperFolder.add($09b28d582cee5bbc$var$params, \"displayHelper\").name(\"enabled\").onChange((v)=>{\n        if (v && $09b28d582cee5bbc$var$helper) $09b28d582cee5bbc$var$helper.update();\n    });\n    helperFolder.add($09b28d582cee5bbc$var$params, \"helperDepth\", 1, 50, 1).onChange((v)=>{\n        if ($09b28d582cee5bbc$var$helper) {\n            $09b28d582cee5bbc$var$helper.depth = v;\n            $09b28d582cee5bbc$var$helper.update();\n        }\n    });\n    helperFolder.open();\n    const knotFolder = $09b28d582cee5bbc$var$gui.addFolder(\"knot\");\n    knotFolder.add($09b28d582cee5bbc$var$params, \"radius\", 0.5, 2, 0.01);\n    knotFolder.add($09b28d582cee5bbc$var$params, \"tube\", 0.2, 1.2, 0.01);\n    knotFolder.add($09b28d582cee5bbc$var$params, \"tubularSegments\", 50, 2000, 1);\n    knotFolder.add($09b28d582cee5bbc$var$params, \"radialSegments\", 5, 2000, 1);\n    knotFolder.add($09b28d582cee5bbc$var$params, \"p\", 1, 10, 1);\n    knotFolder.add($09b28d582cee5bbc$var$params, \"q\", 1, 10, 1);\n    knotFolder.open();\n    const bvhFolder = $09b28d582cee5bbc$var$gui.addFolder(\"bvh\");\n    bvhFolder.add($09b28d582cee5bbc$var$params, \"useWebWorker\");\n    bvhFolder.add($09b28d582cee5bbc$var$params, \"maxWorkerCount\", 1, 16, 1).disable(!$09b28d582cee5bbc$var$sharedArrayBufferSupported);\n    bvhFolder.add($09b28d582cee5bbc$var$params, \"strategy\", {\n        CENTER: $Mleu6.CENTER,\n        AVERAGE: $Mleu6.AVERAGE,\n        SAH: $Mleu6.SAH\n    });\n    $09b28d582cee5bbc$var$gui.add({\n        regenerateKnot: $09b28d582cee5bbc$var$regenerateKnot\n    }, \"regenerateKnot\").name(\"regenerate\");\n    $09b28d582cee5bbc$var$regenerateKnot();\n    window.addEventListener(\"resize\", function() {\n        $09b28d582cee5bbc$var$camera.aspect = window.innerWidth / window.innerHeight;\n        $09b28d582cee5bbc$var$camera.updateProjectionMatrix();\n        $09b28d582cee5bbc$var$renderer.setSize(window.innerWidth, window.innerHeight);\n    }, false);\n}\nfunction $09b28d582cee5bbc$var$regenerateKnot() {\n    if ($09b28d582cee5bbc$var$generating) return;\n    $09b28d582cee5bbc$var$generating = true;\n    if ($09b28d582cee5bbc$var$knot) {\n        $09b28d582cee5bbc$var$knot.material.dispose();\n        $09b28d582cee5bbc$var$knot.geometry.dispose();\n        $09b28d582cee5bbc$var$group.remove($09b28d582cee5bbc$var$knot);\n        $09b28d582cee5bbc$var$group.remove($09b28d582cee5bbc$var$helper);\n    }\n    const stallStartTime = window.performance.now();\n    const geomStartTime = window.performance.now();\n    $09b28d582cee5bbc$var$knot = new $ilwiq.Mesh(new $ilwiq.TorusKnotGeometry($09b28d582cee5bbc$var$params.radius, $09b28d582cee5bbc$var$params.tube, $09b28d582cee5bbc$var$params.tubularSegments, $09b28d582cee5bbc$var$params.radialSegments, $09b28d582cee5bbc$var$params.p, $09b28d582cee5bbc$var$params.q), new $ilwiq.MeshStandardMaterial({\n        color: new $ilwiq.Color(0x4db6ac).convertSRGBToLinear(),\n        roughness: 0.75\n    }));\n    const geomTime = window.performance.now() - geomStartTime;\n    const startTime = window.performance.now();\n    const options = {\n        strategy: $09b28d582cee5bbc$var$params.strategy\n    };\n    let totalStallTime;\n    if ($09b28d582cee5bbc$var$params.useWebWorker) {\n        const onProgress = (v)=>{\n            const perc = (v * 100).toFixed(0);\n            $09b28d582cee5bbc$var$loadContainer.style.visibility = \"visible\";\n            $09b28d582cee5bbc$var$loadBar.style.width = `${perc}%`;\n            $09b28d582cee5bbc$var$loadText.innerText = `${perc}%`;\n        };\n        $09b28d582cee5bbc$var$bvhGenerationWorker.maxWorkerCount = $09b28d582cee5bbc$var$params.maxWorkerCount;\n        $09b28d582cee5bbc$var$bvhGenerationWorker.generate($09b28d582cee5bbc$var$knot.geometry, {\n            onProgress: onProgress,\n            ...options\n        }).then((bvh)=>{\n            $09b28d582cee5bbc$var$loadContainer.style.visibility = \"hidden\";\n            $09b28d582cee5bbc$var$knot.geometry.boundsTree = bvh;\n            $09b28d582cee5bbc$var$group.add($09b28d582cee5bbc$var$knot);\n            const deltaTime = window.performance.now() - startTime;\n            $09b28d582cee5bbc$var$generating = false;\n            $09b28d582cee5bbc$var$helper = new (0, $5ca9G.MeshBVHHelper)($09b28d582cee5bbc$var$knot, 0);\n            $09b28d582cee5bbc$var$helper.depth = $09b28d582cee5bbc$var$params.helperDepth;\n            if ($09b28d582cee5bbc$var$params.displayHelper) $09b28d582cee5bbc$var$helper.update();\n            $09b28d582cee5bbc$var$group.add($09b28d582cee5bbc$var$helper);\n            $09b28d582cee5bbc$var$outputContainer.textContent = `Geometry Generation Time  : ${geomTime.toFixed(3)}ms\\n` + `BVH Generation Time       : ${deltaTime.toFixed(3)}ms\\n` + `Frame Stall Time          : ${totalStallTime.toFixed(3)}\\n` + `SharedArrayBuffer Support : ${$09b28d582cee5bbc$var$sharedArrayBufferSupported}`;\n        });\n        totalStallTime = window.performance.now() - stallStartTime;\n    } else {\n        $09b28d582cee5bbc$var$knot.geometry.boundsTree = new (0, $ff8ed.MeshBVH)($09b28d582cee5bbc$var$knot.geometry, options);\n        totalStallTime = window.performance.now() - stallStartTime;\n        $09b28d582cee5bbc$var$group.add($09b28d582cee5bbc$var$knot);\n        const deltaTime = window.performance.now() - startTime;\n        $09b28d582cee5bbc$var$generating = false;\n        $09b28d582cee5bbc$var$helper = new (0, $5ca9G.MeshBVHHelper)($09b28d582cee5bbc$var$knot);\n        $09b28d582cee5bbc$var$helper.depth = $09b28d582cee5bbc$var$params.helperDepth;\n        $09b28d582cee5bbc$var$helper.update();\n        $09b28d582cee5bbc$var$group.add($09b28d582cee5bbc$var$helper);\n        $09b28d582cee5bbc$var$outputContainer.textContent = `Geometry Generation Time  : ${geomTime.toFixed(3)}ms\\n` + `BVH Generation Time       : ${deltaTime.toFixed(3)}ms\\n` + `Frame Stall Time          : ${totalStallTime.toFixed(3)}`;\n    }\n}\nfunction $09b28d582cee5bbc$var$render() {\n    $09b28d582cee5bbc$var$stats.update();\n    requestAnimationFrame($09b28d582cee5bbc$var$render);\n    let delta = $09b28d582cee5bbc$var$clock.getDelta();\n    $09b28d582cee5bbc$var$group.rotation.x += 0.4 * delta;\n    $09b28d582cee5bbc$var$group.rotation.y += 0.6 * delta;\n    if ($09b28d582cee5bbc$var$helper) $09b28d582cee5bbc$var$helper.visible = $09b28d582cee5bbc$var$params.displayHelper;\n    $09b28d582cee5bbc$var$renderer.render($09b28d582cee5bbc$var$scene, $09b28d582cee5bbc$var$camera);\n}\n\n\n//# sourceMappingURL=asyncGenerate.c8e6bcbb.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","export class WorkerBase {\n\n\tconstructor( worker ) {\n\n\t\tthis.name = 'WorkerBase';\n\t\tthis.running = false;\n\t\tthis.worker = worker;\n\t\tthis.worker.onerror = e => {\n\n\t\t\tif ( e.message ) {\n\n\t\t\t\tthrow new Error( `${ this.name }: Could not create Web Worker with error \"${ e.message }\"` );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( `${ this.name }: Could not create Web Worker.` );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\trunTask() {}\n\n\tgenerate( ...args ) {\n\n\t\tif ( this.running ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Already running job.' );\n\n\t\t}\n\n\t\tif ( this.worker === null ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Worker has been disposed.' );\n\n\t\t}\n\n\t\tthis.running = true;\n\n\t\tconst promise = this.runTask( this.worker, ...args );\n\t\tpromise.finally( () => {\n\n\t\t\tthis.running = false;\n\n\t\t} );\n\n\t\treturn promise;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.worker.terminate();\n\t\tthis.worker = null;\n\n\t}\n\n}\n","import { Box3, BufferAttribute } from 'three';\nimport { MeshBVH } from '../core/MeshBVH.js';\nimport { WorkerBase } from './utils/WorkerBase.js';\n\nexport class GenerateMeshBVHWorker extends WorkerBase {\n\n\tconstructor() {\n\n\t\tconst worker = new Worker( new URL( './generateMeshBVH.worker.js', import.meta.url ), { type: 'module' } );\n\t\tsuper( worker );\n\t\tthis.name = 'GenerateMeshBVHWorker';\n\n\t}\n\n\trunTask( worker, geometry, options = {} ) {\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tif (\n\t\t\t\tgeometry.getAttribute( 'position' ).isInterleavedBufferAttribute ||\n\t\t\t\tgeometry.index && geometry.index.isInterleavedBufferAttribute\n\t\t\t) {\n\n\t\t\t\tthrow new Error( 'GenerateMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.' );\n\n\t\t\t}\n\n\t\t\tworker.onerror = e => {\n\n\t\t\t\treject( new Error( `GenerateMeshBVHWorker: ${ e.message }` ) );\n\n\t\t\t};\n\n\t\t\tworker.onmessage = e => {\n\n\t\t\t\tconst { data } = e;\n\n\t\t\t\tif ( data.error ) {\n\n\t\t\t\t\treject( new Error( data.error ) );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( data.serialized ) {\n\n\t\t\t\t\tconst { serialized, position } = data;\n\t\t\t\t\tconst bvh = MeshBVH.deserialize( serialized, geometry, { setIndex: false } );\n\t\t\t\t\tconst boundsOptions = Object.assign( {\n\n\t\t\t\t\t\tsetBoundingBox: true,\n\n\t\t\t\t\t}, options );\n\n\t\t\t\t\t// we need to replace the arrays because they're neutered entirely by the\n\t\t\t\t\t// webworker transfer.\n\t\t\t\t\tgeometry.attributes.position.array = position;\n\t\t\t\t\tif ( serialized.index ) {\n\n\t\t\t\t\t\tif ( geometry.index ) {\n\n\t\t\t\t\t\t\tgeometry.index.array = serialized.index;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst newIndex = new BufferAttribute( serialized.index, 1, false );\n\t\t\t\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boundsOptions.setBoundingBox ) {\n\n\t\t\t\t\t\tgeometry.boundingBox = bvh.getBoundingBox( new Box3() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( options.onProgress ) {\n\n\t\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( bvh );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( options.onProgress ) {\n\n\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tconst index = geometry.index ? geometry.index.array : null;\n\t\t\tconst position = geometry.attributes.position.array;\n\t\t\tconst transferable = [ position ];\n\t\t\tif ( index ) {\n\n\t\t\t\ttransferable.push( index );\n\n\t\t\t}\n\n\t\t\tworker.postMessage( {\n\n\t\t\t\tindex,\n\t\t\t\tposition,\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\tonProgress: null,\n\t\t\t\t\tincludedProgressCallback: Boolean( options.onProgress ),\n\t\t\t\t\tgroups: [ ... geometry.groups ],\n\t\t\t\t},\n\n\t\t\t}, transferable.map( arr => arr.buffer ).filter( v => ( typeof SharedArrayBuffer === 'undefined' ) || ! ( v instanceof SharedArrayBuffer ) ) );\n\n\t\t} );\n\n\t}\n\n}\n","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(\"generateMeshBVH.worker.17f4c1c5.js\");\nmodule.exports = workerURL(url.toString(), url.origin, true);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","import { LineBasicMaterial, BufferAttribute, Box3, Group, MeshBasicMaterial, Object3D, BufferGeometry } from 'three';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\nimport { MeshBVH } from '../core/MeshBVH.js';\n\nconst boundingBox = /* @__PURE__ */ new Box3();\nclass MeshBVHRootHelper extends Object3D {\n\n\tget isMesh() {\n\n\t\treturn ! this.displayEdges;\n\n\t}\n\n\tget isLineSegments() {\n\n\t\treturn this.displayEdges;\n\n\t}\n\n\tget isLine() {\n\n\t\treturn this.displayEdges;\n\n\t}\n\n\tconstructor( bvh, material, depth = 10, group = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.material = material;\n\t\tthis.geometry = new BufferGeometry();\n\t\tthis.name = 'MeshBVHRootHelper';\n\t\tthis.depth = depth;\n\t\tthis.displayParents = false;\n\t\tthis.bvh = bvh;\n\t\tthis.displayEdges = true;\n\t\tthis._group = group;\n\n\t}\n\n\traycast() {}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst boundsTree = this.bvh;\n\t\tconst group = this._group;\n\t\tgeometry.dispose();\n\t\tthis.visible = false;\n\t\tif ( boundsTree ) {\n\n\t\t\t// count the number of bounds required\n\t\t\tconst targetDepth = this.depth - 1;\n\t\t\tconst displayParents = this.displayParents;\n\t\t\tlet boundsCount = 0;\n\t\t\tboundsTree.traverse( ( depth, isLeaf ) => {\n\n\t\t\t\tif ( depth >= targetDepth || isLeaf ) {\n\n\t\t\t\t\tboundsCount ++;\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else if ( displayParents ) {\n\n\t\t\t\t\tboundsCount ++;\n\n\t\t\t\t}\n\n\t\t\t}, group );\n\n\t\t\t// fill in the position buffer with the bounds corners\n\t\t\tlet posIndex = 0;\n\t\t\tconst positionArray = new Float32Array( 8 * 3 * boundsCount );\n\t\t\tboundsTree.traverse( ( depth, isLeaf, boundingData ) => {\n\n\t\t\t\tconst terminate = depth >= targetDepth || isLeaf;\n\t\t\t\tif ( terminate || displayParents ) {\n\n\t\t\t\t\tarrayToBox( 0, boundingData, boundingBox );\n\n\t\t\t\t\tconst { min, max } = boundingBox;\n\t\t\t\t\tfor ( let x = - 1; x <= 1; x += 2 ) {\n\n\t\t\t\t\t\tconst xVal = x < 0 ? min.x : max.x;\n\t\t\t\t\t\tfor ( let y = - 1; y <= 1; y += 2 ) {\n\n\t\t\t\t\t\t\tconst yVal = y < 0 ? min.y : max.y;\n\t\t\t\t\t\t\tfor ( let z = - 1; z <= 1; z += 2 ) {\n\n\t\t\t\t\t\t\t\tconst zVal = z < 0 ? min.z : max.z;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 0 ] = xVal;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 1 ] = yVal;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 2 ] = zVal;\n\n\t\t\t\t\t\t\t\tposIndex += 3;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn terminate;\n\n\t\t\t\t}\n\n\t\t\t}, group );\n\n\t\t\tlet indexArray;\n\t\t\tlet indices;\n\t\t\tif ( this.displayEdges ) {\n\n\t\t\t\t// fill in the index buffer to point to the corner points\n\t\t\t\tindices = new Uint8Array( [\n\t\t\t\t\t// x axis\n\t\t\t\t\t0, 4,\n\t\t\t\t\t1, 5,\n\t\t\t\t\t2, 6,\n\t\t\t\t\t3, 7,\n\n\t\t\t\t\t// y axis\n\t\t\t\t\t0, 2,\n\t\t\t\t\t1, 3,\n\t\t\t\t\t4, 6,\n\t\t\t\t\t5, 7,\n\n\t\t\t\t\t// z axis\n\t\t\t\t\t0, 1,\n\t\t\t\t\t2, 3,\n\t\t\t\t\t4, 5,\n\t\t\t\t\t6, 7,\n\t\t\t\t] );\n\n\t\t\t} else {\n\n\t\t\t\tindices = new Uint8Array( [\n\n\t\t\t\t\t// X-, X+\n\t\t\t\t\t0, 1, 2,\n\t\t\t\t\t2, 1, 3,\n\n\t\t\t\t\t4, 6, 5,\n\t\t\t\t\t6, 7, 5,\n\n\t\t\t\t\t// Y-, Y+\n\t\t\t\t\t1, 4, 5,\n\t\t\t\t\t0, 4, 1,\n\n\t\t\t\t\t2, 3, 6,\n\t\t\t\t\t3, 7, 6,\n\n\t\t\t\t\t// Z-, Z+\n\t\t\t\t\t0, 2, 4,\n\t\t\t\t\t2, 6, 4,\n\n\t\t\t\t\t1, 5, 3,\n\t\t\t\t\t3, 5, 7,\n\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( positionArray.length > 65535 ) {\n\n\t\t\t\tindexArray = new Uint32Array( indices.length * boundsCount );\n\n\t\t\t} else {\n\n\t\t\t\tindexArray = new Uint16Array( indices.length * boundsCount );\n\n\t\t\t}\n\n\t\t\tconst indexLength = indices.length;\n\t\t\tfor ( let i = 0; i < boundsCount; i ++ ) {\n\n\t\t\t\tconst posOffset = i * 8;\n\t\t\t\tconst indexOffset = i * indexLength;\n\t\t\t\tfor ( let j = 0; j < indexLength; j ++ ) {\n\n\t\t\t\t\tindexArray[ indexOffset + j ] = posOffset + indices[ j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update the geometry\n\t\t\tgeometry.setIndex(\n\t\t\t\tnew BufferAttribute( indexArray, 1, false ),\n\t\t\t);\n\t\t\tgeometry.setAttribute(\n\t\t\t\t'position',\n\t\t\t\tnew BufferAttribute( positionArray, 3, false ),\n\t\t\t);\n\t\t\tthis.visible = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass MeshBVHHelper extends Group {\n\n\tget color() {\n\n\t\treturn this.edgeMaterial.color;\n\n\t}\n\n\tget opacity() {\n\n\t\treturn this.edgeMaterial.opacity;\n\n\t}\n\n\tset opacity( v ) {\n\n\t\tthis.edgeMaterial.opacity = v;\n\t\tthis.meshMaterial.opacity = v;\n\n\t}\n\n\tconstructor( mesh = null, bvh = null, depth = 10 ) {\n\n\t\t// handle bvh, depth signature\n\t\tif ( mesh instanceof MeshBVH ) {\n\n\t\t\tdepth = bvh || 10;\n\t\t\tbvh = mesh;\n\t\t\tmesh = null;\n\n\t\t}\n\n\t\t// handle mesh, depth signature\n\t\tif ( typeof bvh === 'number' ) {\n\n\t\t\tdepth = bvh;\n\t\t\tbvh = null;\n\n\t\t}\n\n\t\tsuper();\n\n\t\tthis.name = 'MeshBVHHelper';\n\t\tthis.depth = depth;\n\t\tthis.mesh = mesh;\n\t\tthis.bvh = bvh;\n\t\tthis.displayParents = false;\n\t\tthis.displayEdges = true;\n\t\tthis._roots = [];\n\n\t\tconst edgeMaterial = new LineBasicMaterial( {\n\t\t\tcolor: 0x00FF88,\n\t\t\ttransparent: true,\n\t\t\topacity: 0.3,\n\t\t\tdepthWrite: false,\n\t\t} );\n\n\t\tconst meshMaterial = new MeshBasicMaterial( {\n\t\t\tcolor: 0x00FF88,\n\t\t\ttransparent: true,\n\t\t\topacity: 0.3,\n\t\t\tdepthWrite: false,\n\t\t} );\n\n\t\tmeshMaterial.color = edgeMaterial.color;\n\n\t\tthis.edgeMaterial = edgeMaterial;\n\t\tthis.meshMaterial = meshMaterial;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst bvh = this.bvh || this.mesh.geometry.boundsTree;\n\t\tconst totalRoots = bvh ? bvh._roots.length : 0;\n\t\twhile ( this._roots.length > totalRoots ) {\n\n\t\t\tconst root = this._roots.pop();\n\t\t\troot.geometry.dispose();\n\t\t\tthis.remove( root );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < totalRoots; i ++ ) {\n\n\t\t\tconst { depth, edgeMaterial, meshMaterial, displayParents, displayEdges } = this;\n\n\t\t\tif ( i >= this._roots.length ) {\n\n\t\t\t\tconst root = new MeshBVHRootHelper( bvh, edgeMaterial, depth, i );\n\t\t\t\tthis.add( root );\n\t\t\t\tthis._roots.push( root );\n\n\t\t\t}\n\n\t\t\tconst root = this._roots[ i ];\n\t\t\troot.bvh = bvh;\n\t\t\troot.depth = depth;\n\t\t\troot.displayParents = displayParents;\n\t\t\troot.displayEdges = displayEdges;\n\t\t\troot.material = displayEdges ? edgeMaterial : meshMaterial;\n\t\t\troot.update();\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( ...args ) {\n\n\t\tconst mesh = this.mesh;\n\t\tconst parent = this.parent;\n\n\t\tif ( mesh !== null ) {\n\n\t\t\tmesh.updateWorldMatrix( true, false );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tthis.matrix\n\t\t\t\t\t.copy( parent.matrixWorld )\n\t\t\t\t\t.invert()\n\t\t\t\t\t.multiply( mesh.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrix\n\t\t\t\t\t.copy( mesh.matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.matrix.decompose(\n\t\t\t\tthis.position,\n\t\t\t\tthis.quaternion,\n\t\t\t\tthis.scale,\n\t\t\t);\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( ...args );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.depth = source.depth;\n\t\tthis.mesh = source.mesh;\n\t\tthis.bvh = source.bvh;\n\t\tthis.opacity = source.opacity;\n\t\tthis.color.copy( source.color );\n\n\t}\n\n\tclone() {\n\n\t\treturn new MeshBVHHelper( this.mesh, this.bvh, this.depth );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.edgeMaterial.dispose();\n\t\tthis.meshMaterial.dispose();\n\n\t\tconst children = this.children;\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].geometry.dispose();\n\n\t\t}\n\n\t}\n\n}\n\nexport class MeshBVHVisualizer extends MeshBVHHelper {\n\n\tconstructor( ...args ) {\n\n\t\tsuper( ...args );\n\n\t\tconsole.warn( 'MeshBVHVisualizer: MeshBVHVisualizer has been deprecated. Use MeshBVHHelper, instead.' );\n\n\t}\n\n}\n\nexport { MeshBVHHelper };\n","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"ggXQv\\\",\\\"asyncGenerate.c8e6bcbb.js\\\",\\\"6J6WW\\\",\\\"generateMeshBVH.worker.17f4c1c5.js\\\",\\\"acVmZ\\\",\\\"generateMeshBVH.worker.aad48e6e.js\\\",\\\"8UXAC\\\",\\\"parallelMeshBVH.worker.03387c6a.js\\\",\\\"acVmZ\\\",\\\"generateMeshBVH.worker.aad48e6e.js\\\",\\\"gr8Yf\\\",\\\"asyncGenerate.22609466.js\\\",\\\"j19h5\\\",\\\"asyncGenerate.e8b1599c.js\\\",\\\"30Pwg\\\",\\\"asyncGenerate.77ce35af.js\\\"]\"));","import * as THREE from 'three';\nimport Stats from 'stats.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { ParallelMeshBVHWorker } from '../src/workers/ParallelMeshBVHWorker.js';\nimport { AVERAGE, CENTER, MeshBVH, MeshBVHHelper, SAH } from '..';\n\n// Parallel BVH generation is only supported with SharedArrayBuffer\nconst sharedArrayBufferSupported = typeof SharedArrayBuffer !== 'undefined';\n\nconst params = {\n\n\tuseWebWorker: true,\n\tmaxWorkerCount: sharedArrayBufferSupported ? navigator.hardwareConcurrency : 1,\n\tstrategy: CENTER,\n\n\tradius: 1,\n\ttube: 0.3,\n\ttubularSegments: 500,\n\tradialSegments: 500,\n\tp: 3,\n\tq: 5,\n\n\tdisplayHelper: false,\n\thelperDepth: 10,\n\n};\n\nlet renderer, camera, scene, knot, clock, gui, helper, group, stats;\nlet outputContainer, loadContainer, loadBar, loadText;\nlet bvhGenerationWorker;\nlet generating = false;\n\ninit();\nrender();\n\nfunction init() {\n\n\tconst bgColor = 0xffca28;\n\n\toutputContainer = document.getElementById( 'output' );\n\tloadContainer = document.getElementById( 'loading-container' );\n\tloadBar = document.querySelector( '#loading-container .bar' );\n\tloadText = document.querySelector( '#loading-container .text' );\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\tscene.fog = new THREE.Fog( 0xffca28, 20, 60 );\n\n\tconst light = new THREE.DirectionalLight( 0xffffff, 1 );\n\tlight.position.set( 1, 1, 1 );\n\tscene.add( light );\n\tscene.add( new THREE.AmbientLight( 0xb0bec5, 0.8 ) );\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( 0, 0, 4 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\tclock = new THREE.Clock();\n\n\t// stats setup\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\n\tgroup = new THREE.Group();\n\tscene.add( group );\n\n\tfor ( let i = 0; i < 400; i ++ ) {\n\n\t\tconst sphere = new THREE.Mesh(\n\t\t\tnew THREE.SphereGeometry( 1, 32, 32 ),\n\t\t\tnew THREE.MeshBasicMaterial()\n\t\t);\n\t\tsphere.position.set(\n\t\t\tMath.random() - 0.5,\n\t\t\tMath.random() - 0.5,\n\t\t\tMath.random() - 0.5\n\t\t).multiplyScalar( 70 );\n\t\tsphere.scale.setScalar( Math.random() * 0.3 + 0.1 );\n\t\tgroup.add( sphere );\n\n\t}\n\n\tbvhGenerationWorker = new ParallelMeshBVHWorker();\n\twindow.WORKER = bvhGenerationWorker;\n\n\tgui = new GUI();\n\tconst helperFolder = gui.addFolder( 'helper' );\n\thelperFolder.add( params, 'displayHelper' ).name( 'enabled' ).onChange( v => {\n\n\t\tif ( v && helper ) {\n\n\t\t\thelper.update();\n\n\t\t}\n\n\t} );\n\thelperFolder.add( params, 'helperDepth', 1, 50, 1 ).onChange( v => {\n\n\t\tif ( helper ) {\n\n\t\t\thelper.depth = v;\n\t\t\thelper.update();\n\n\t\t}\n\n\t} );\n\thelperFolder.open();\n\n\tconst knotFolder = gui.addFolder( 'knot' );\n\tknotFolder.add( params, 'radius', 0.5, 2, 0.01 );\n\tknotFolder.add( params, 'tube', 0.2, 1.2, 0.01 );\n\tknotFolder.add( params, 'tubularSegments', 50, 2000, 1 );\n\tknotFolder.add( params, 'radialSegments', 5, 2000, 1 );\n\tknotFolder.add( params, 'p', 1, 10, 1 );\n\tknotFolder.add( params, 'q', 1, 10, 1 );\n\tknotFolder.open();\n\n\tconst bvhFolder = gui.addFolder( 'bvh' );\n\tbvhFolder.add( params, 'useWebWorker' );\n\tbvhFolder.add( params, 'maxWorkerCount', 1, 16, 1 ).disable( ! sharedArrayBufferSupported );\n\tbvhFolder.add( params, 'strategy', { CENTER, AVERAGE, SAH } );\n\n\tgui.add( { regenerateKnot }, 'regenerateKnot' ).name( 'regenerate' );\n\n\tregenerateKnot();\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n}\n\nfunction regenerateKnot() {\n\n\tif ( generating ) {\n\n\t\treturn;\n\n\t}\n\n\tgenerating = true;\n\n\tif ( knot ) {\n\n\t\tknot.material.dispose();\n\t\tknot.geometry.dispose();\n\t\tgroup.remove( knot );\n\t\tgroup.remove( helper );\n\n\t}\n\n\tconst stallStartTime = window.performance.now();\n\tconst geomStartTime = window.performance.now();\n\tknot = new THREE.Mesh(\n\t\tnew THREE.TorusKnotGeometry(\n\t\t\tparams.radius,\n\t\t\tparams.tube,\n\t\t\tparams.tubularSegments,\n\t\t\tparams.radialSegments,\n\t\t\tparams.p,\n\t\t\tparams.q\n\t\t),\n\t\tnew THREE.MeshStandardMaterial( {\n\t\t\tcolor: new THREE.Color( 0x4db6ac ).convertSRGBToLinear(),\n\t\t\troughness: 0.75\n\n\t\t} )\n\t);\n\tconst geomTime = window.performance.now() - geomStartTime;\n\tconst startTime = window.performance.now();\n\tconst options = { strategy: params.strategy };\n\tlet totalStallTime;\n\tif ( params.useWebWorker ) {\n\n\t\tconst onProgress = v => {\n\n\t\t\tconst perc = ( v * 100 ).toFixed( 0 );\n\t\t\tloadContainer.style.visibility = 'visible';\n\t\t\tloadBar.style.width = `${ perc }%`;\n\t\t\tloadText.innerText = `${ perc }%`;\n\n\t\t};\n\n\t\tbvhGenerationWorker.maxWorkerCount = params.maxWorkerCount;\n\t\tbvhGenerationWorker.generate( knot.geometry, { onProgress, ...options } ).then( bvh => {\n\n\t\t\tloadContainer.style.visibility = 'hidden';\n\n\t\t\tknot.geometry.boundsTree = bvh;\n\t\t\tgroup.add( knot );\n\n\t\t\tconst deltaTime = window.performance.now() - startTime;\n\t\t\tgenerating = false;\n\n\t\t\thelper = new MeshBVHHelper( knot, 0 );\n\t\t\thelper.depth = params.helperDepth;\n\n\t\t\tif ( params.displayHelper ) {\n\n\t\t\t\thelper.update();\n\n\t\t\t}\n\n\t\t\tgroup.add( helper );\n\n\t\t\toutputContainer.textContent =\n\t\t\t\t`Geometry Generation Time  : ${ geomTime.toFixed( 3 ) }ms\\n` +\n\t\t\t\t`BVH Generation Time       : ${ deltaTime.toFixed( 3 ) }ms\\n` +\n\t\t\t\t`Frame Stall Time          : ${ totalStallTime.toFixed( 3 ) }\\n` +\n\t\t\t\t`SharedArrayBuffer Support : ${ sharedArrayBufferSupported }`;\n\n\t\t} );\n\n\t\ttotalStallTime = window.performance.now() - stallStartTime;\n\n\t} else {\n\n\t\tknot.geometry.boundsTree = new MeshBVH( knot.geometry, options );\n\t\ttotalStallTime = window.performance.now() - stallStartTime;\n\n\t\tgroup.add( knot );\n\n\t\tconst deltaTime = window.performance.now() - startTime;\n\t\tgenerating = false;\n\n\t\thelper = new MeshBVHHelper( knot );\n\t\thelper.depth = params.helperDepth;\n\t\thelper.update();\n\t\tgroup.add( helper );\n\n\t\toutputContainer.textContent =\n\t\t\t`Geometry Generation Time  : ${ geomTime.toFixed( 3 ) }ms\\n` +\n\t\t\t`BVH Generation Time       : ${ deltaTime.toFixed( 3 ) }ms\\n` +\n\t\t\t`Frame Stall Time          : ${ totalStallTime.toFixed( 3 ) }`;\n\n\t}\n\n}\n\nfunction render() {\n\n\tstats.update();\n\trequestAnimationFrame( render );\n\n\tlet delta = clock.getDelta();\n\tgroup.rotation.x += 0.4 * delta;\n\tgroup.rotation.y += 0.6 * delta;\n\n\tif ( helper ) {\n\n\t\thelper.visible = params.displayHelper;\n\n\t}\n\n\trenderer.render( scene, camera );\n\n}\n","import { Box3, BufferAttribute } from 'three';\nimport { MeshBVH } from '../core/MeshBVH.js';\nimport { WorkerBase } from './utils/WorkerBase.js';\nimport { convertToBufferType, isSharedArrayBufferSupported } from '../utils/BufferUtils.js';\nimport { GenerateMeshBVHWorker } from './GenerateMeshBVHWorker.js';\nimport { ensureIndex } from '../core/build/geometryUtils.js';\n\nconst DEFAULT_WORKER_COUNT = typeof navigator !== 'undefined' ? navigator.hardwareConcurrency : 4;\nclass _ParallelMeshBVHWorker extends WorkerBase {\n\n\tconstructor() {\n\n\t\tconst worker = new Worker( new URL( './parallelMeshBVH.worker.js', import.meta.url ), { type: 'module' } );\n\t\tsuper( worker );\n\n\t\tthis.name = 'ParallelMeshBVHWorker';\n\t\tthis.maxWorkerCount = Math.max( DEFAULT_WORKER_COUNT, 4 );\n\n\t\tif ( ! isSharedArrayBufferSupported() ) {\n\n\t\t\tthrow new Error( 'ParallelMeshBVHWorker: Shared Array Buffers are not supported.' );\n\n\t\t}\n\n\t}\n\n\trunTask( worker, geometry, options = {} ) {\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tif ( ! geometry.index && ! options.indirect ) {\n\n\t\t\t\tensureIndex( geometry, options );\n\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tgeometry.getAttribute( 'position' ).isInterleavedBufferAttribute ||\n\t\t\t\tgeometry.index && geometry.index.isInterleavedBufferAttribute\n\t\t\t) {\n\n\t\t\t\tthrow new Error( 'ParallelMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.' );\n\n\t\t\t}\n\n\t\t\tworker.onerror = e => {\n\n\t\t\t\treject( new Error( `ParallelMeshBVHWorker: ${ e.message }` ) );\n\n\t\t\t};\n\n\t\t\tworker.onmessage = e => {\n\n\t\t\t\tconst { data } = e;\n\n\t\t\t\tif ( data.error ) {\n\n\t\t\t\t\treject( new Error( data.error ) );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( data.serialized ) {\n\n\t\t\t\t\tconst { serialized, position } = data;\n\t\t\t\t\tconst bvh = MeshBVH.deserialize( serialized, geometry, { setIndex: false } );\n\t\t\t\t\tconst boundsOptions = {\n\t\t\t\t\t\tsetBoundingBox: true,\n\t\t\t\t\t\t...options,\n\t\t\t\t\t};\n\n\t\t\t\t\t// we need to replace the arrays because they're neutered entirely by the\n\t\t\t\t\t// webworker transfer.\n\t\t\t\t\tgeometry.attributes.position.array = position;\n\t\t\t\t\tif ( serialized.index ) {\n\n\t\t\t\t\t\tif ( geometry.index ) {\n\n\t\t\t\t\t\t\tgeometry.index.array = serialized.index;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst newIndex = new BufferAttribute( serialized.index, 1, false );\n\t\t\t\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boundsOptions.setBoundingBox ) {\n\n\t\t\t\t\t\tgeometry.boundingBox = bvh.getBoundingBox( new Box3() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( options.onProgress ) {\n\n\t\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( bvh );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( options.onProgress ) {\n\n\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tconst index = geometry.index ? geometry.index.array : null;\n\t\t\tconst position = geometry.attributes.position.array;\n\t\t\tworker.postMessage( {\n\n\t\t\t\toperation: 'BUILD_BVH',\n\t\t\t\tmaxWorkerCount: this.maxWorkerCount,\n\t\t\t\tindex: convertToBufferType( index, SharedArrayBuffer ),\n\t\t\t\tposition: convertToBufferType( position, SharedArrayBuffer ),\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\tonProgress: null,\n\t\t\t\t\tincludedProgressCallback: Boolean( options.onProgress ),\n\t\t\t\t\tgroups: [ ... geometry.groups ],\n\t\t\t\t},\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n}\n\nexport class ParallelMeshBVHWorker {\n\n\tconstructor() {\n\n\t\tif ( isSharedArrayBufferSupported() ) {\n\n\t\t\treturn new _ParallelMeshBVHWorker();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'ParallelMeshBVHWorker: SharedArrayBuffers not supported. Falling back to single-threaded GenerateMeshBVHWorker.' );\n\n\t\t\tconst object = new GenerateMeshBVHWorker();\n\t\t\tobject.maxWorkerCount = DEFAULT_WORKER_COUNT;\n\t\t\treturn object;\n\n\t\t}\n\n\t}\n\n}\n","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(\"parallelMeshBVH.worker.03387c6a.js\");\nmodule.exports = workerURL(url.toString(), url.origin, true);"],"names":["$09b28d582cee5bbc$var$renderer","$09b28d582cee5bbc$var$camera","$09b28d582cee5bbc$var$scene","$09b28d582cee5bbc$var$knot","$09b28d582cee5bbc$var$clock","$09b28d582cee5bbc$var$gui","$09b28d582cee5bbc$var$helper","$09b28d582cee5bbc$var$group","$09b28d582cee5bbc$var$stats","$09b28d582cee5bbc$var$outputContainer","$09b28d582cee5bbc$var$loadContainer","$09b28d582cee5bbc$var$loadBar","$09b28d582cee5bbc$var$loadText","$09b28d582cee5bbc$var$bvhGenerationWorker","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","f","a","c","appendChild","dom","u","d","children","style","display","l","document","createElement","cssText","addEventListener","preventDefault","k","performance","Date","now","g","r","Panel","h","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","Math","round","window","devicePixelRatio","m","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","$5308359e4b33977a$export$8dbf7c43841b75b7","constructor","worker","name","running","onerror","message","runTask","generate","args","promise","finally","dispose","terminate","$62b3d05905f83386$export$426cc6213ad628cf","$ilwiq","$ff8ed","$77YCt","WorkerBase","Worker","geometry","options","Promise","resolve","reject","getAttribute","isInterleavedBufferAttribute","index","onmessage","data","error","serialized","position","bvh","MeshBVH","deserialize","setIndex","boundsOptions","assign","setBoundingBox","attributes","array","newIndex","BufferAttribute","boundingBox","getBoundingBox","Box3","onProgress","progress","transferable","push","postMessage","includedProgressCallback","Boolean","groups","map","arr","buffer","filter","SharedArrayBuffer","$7ryUf","$8a4fc930af686efe$var$url","URL","url","toString","origin","workerUrl","isESM","location","source","JSON","stringify","createObjectURL","Blob","type","$3c85f35a8c29fa9b$export$e57d74bcb7e3bec5","$aw71y","$3c85f35a8c29fa9b$var$boundingBox","$3c85f35a8c29fa9b$var$MeshBVHRootHelper","Object3D","isMesh","displayEdges","isLineSegments","isLine","material","depth","group","BufferGeometry","displayParents","_group","raycast","boundsTree","visible","indexArray","indices","targetDepth","boundsCount","traverse","isLeaf","posIndex","positionArray","Float32Array","boundingData","arrayToBox","x","xVal","y","yVal","z","zVal","Uint8Array","Uint32Array","Uint16Array","indexLength","posOffset","indexOffset","j","setAttribute","Group","color","edgeMaterial","opacity","meshMaterial","mesh","_roots","LineBasicMaterial","transparent","depthWrite","MeshBasicMaterial","totalRoots","root","pop","remove","add","updateMatrixWorld","parent","updateWorldMatrix","matrix","copy","matrixWorld","invert","multiply","decompose","quaternion","scale","clone","parse","$c8CJQ","$jiuw3","$2zRsl","$8todg","$aBE3W","$3e80fdad4db32d0c$var$DEFAULT_WORKER_COUNT","navigator","hardwareConcurrency","$d34d752c9645d4fe$exports","$d34d752c9645d4fe$var$url","$3e80fdad4db32d0c$var$_ParallelMeshBVHWorker","maxWorkerCount","isSharedArrayBufferSupported","indirect","ensureIndex","operation","convertToBufferType","$3e80fdad4db32d0c$export$1369cce09af89668","console","warn","object","GenerateMeshBVHWorker","$Mleu6","$5ca9G","$09b28d582cee5bbc$var$sharedArrayBufferSupported","$09b28d582cee5bbc$var$params","useWebWorker","strategy","CENTER","radius","tube","tubularSegments","radialSegments","displayHelper","helperDepth","$09b28d582cee5bbc$var$generating","$09b28d582cee5bbc$var$regenerateKnot","totalStallTime","stallStartTime","geomStartTime","Mesh","TorusKnotGeometry","MeshStandardMaterial","Color","convertSRGBToLinear","roughness","geomTime","startTime","perc","toFixed","visibility","innerText","then","deltaTime","MeshBVHHelper","textContent","$09b28d582cee5bbc$var$init","getElementById","querySelector","WebGLRenderer","antialias","setPixelRatio","setSize","innerWidth","innerHeight","setClearColor","outputEncoding","sRGBEncoding","body","Scene","fog","Fog","light","DirectionalLight","AmbientLight","PerspectiveCamera","far","updateProjectionMatrix","Clock","__esModule","default","sphere","SphereGeometry","random","multiplyScalar","setScalar","WORKER","helperFolder","GUI","addFolder","onChange","open","knotFolder","bvhFolder","disable","AVERAGE","SAH","regenerateKnot","aspect","$09b28d582cee5bbc$var$render","requestAnimationFrame","delta","getDelta","rotation","render"],"version":3,"file":"asyncGenerate.c8e6bcbb.js.map"}