function e(e,t,r,i){Object.defineProperty(e,t,{get:r,set:i,enumerable:!0,configurable:!0})}var t=globalThis,r={},i={},o=t.parcelRequire4485;null==o&&((o=function(e){if(e in r)return r[e].exports;if(e in i){var t=i[e];delete i[e];var o={id:e,exports:{}};return r[e]=o,t.call(o.exports,o,o.exports),o.exports}var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,t){i[e]=t},t.parcelRequire4485=o),(0,o.register)("7ePFa",function(t,r){e(t.exports,"mergeGeometries",()=>n),e(t.exports,"mergeVertices",()=>s),e(t.exports,"toTrianglesDrawMode",()=>u),e(t.exports,"mergeBufferGeometries",()=>a);var i=o("ilwiq");function n(e,t=!1){let r=null!==e[0].index,o=new Set(Object.keys(e[0].attributes)),n=new Set(Object.keys(e[0].morphAttributes)),s={},u={},a=e[0].morphTargetsRelative,f=new i.BufferGeometry,m=0;for(let i=0;i<e.length;++i){let l=e[i],g=0;if(r!==(null!==l.index))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+i+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(let e in l.attributes){if(!o.has(e))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+i+'. All geometries must have compatible attributes; make sure "'+e+'" attribute exists among all geometries, or in none of them.'),null;void 0===s[e]&&(s[e]=[]),s[e].push(l.attributes[e]),g++}if(g!==o.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+i+". Make sure all geometries have the same number of attributes."),null;if(a!==l.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+i+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(let e in l.morphAttributes){if(!n.has(e))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+i+".  .morphAttributes must be consistent throughout all geometries."),null;void 0===u[e]&&(u[e]=[]),u[e].push(l.morphAttributes[e])}if(t){let e;if(r)e=l.index.count;else{if(void 0===l.attributes.position)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+i+". The geometry must have either an index or a position attribute"),null;e=l.attributes.position.count}f.addGroup(m,e,i),m+=e}}if(r){let t=0,r=[];for(let i=0;i<e.length;++i){let o=e[i].index;for(let e=0;e<o.count;++e)r.push(o.getX(e)+t);t+=e[i].attributes.position.count}f.setIndex(r)}for(let e in s){let t=l(s[e]);if(!t)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+e+" attribute."),null;f.setAttribute(e,t)}for(let e in u){let t=u[e][0].length;if(0===t)break;f.morphAttributes=f.morphAttributes||{},f.morphAttributes[e]=[];for(let r=0;r<t;++r){let t=[];for(let i=0;i<u[e].length;++i)t.push(u[e][i][r]);let i=l(t);if(!i)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+e+" morphAttribute."),null;f.morphAttributes[e].push(i)}}return f}function l(e){let t,r,o;let n=0;for(let i=0;i<e.length;++i){let l=e[i];if(l.isInterleavedBufferAttribute)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. InterleavedBufferAttributes are not supported."),null;if(void 0===t&&(t=l.array.constructor),t!==l.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(void 0===r&&(r=l.itemSize),r!==l.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(void 0===o&&(o=l.normalized),o!==l.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;n+=l.array.length}let l=new t(n),s=0;for(let t=0;t<e.length;++t)l.set(e[t].array,s),s+=e[t].array.length;return new i.BufferAttribute(l,r,o)}function s(e,t=1e-4){t=Math.max(t,Number.EPSILON);let r={},o=e.getIndex(),n=e.getAttribute("position"),l=o?o.count:n.count,s=0,u=Object.keys(e.attributes),a={},f={},m=[],g=["getX","getY","getZ","getW"],h=["setX","setY","setZ","setW"];for(let t=0,r=u.length;t<r;t++){let r=u[t],o=e.attributes[r];a[r]=new i.BufferAttribute(new o.array.constructor(o.count*o.itemSize),o.itemSize,o.normalized);let n=e.morphAttributes[r];n&&(f[r]=new i.BufferAttribute(new n.array.constructor(n.count*n.itemSize),n.itemSize,n.normalized))}let c=Math.pow(10,Math.log10(1/t));for(let t=0;t<l;t++){let i=o?o.getX(t):t,n="";for(let t=0,r=u.length;t<r;t++){let r=u[t],o=e.getAttribute(r),l=o.itemSize;for(let e=0;e<l;e++)n+=`${~~(o[g[e]](i)*c)},`}if(n in r)m.push(r[n]);else{for(let t=0,r=u.length;t<r;t++){let r=u[t],o=e.getAttribute(r),n=e.morphAttributes[r],l=o.itemSize,m=a[r],c=f[r];for(let e=0;e<l;e++){let t=g[e],r=h[e];if(m[r](s,o[t](i)),n)for(let e=0,o=n.length;e<o;e++)c[e][r](s,n[e][t](i))}}r[n]=s,m.push(s),s++}}let d=e.clone();for(let t in e.attributes){let e=a[t];if(d.setAttribute(t,new i.BufferAttribute(e.array.slice(0,s*e.itemSize),e.itemSize,e.normalized)),t in f)for(let e=0;e<f[t].length;e++){let r=f[t][e];d.morphAttributes[t][e]=new i.BufferAttribute(r.array.slice(0,s*r.itemSize),r.itemSize,r.normalized)}}return d.setIndex(m),d}function u(e,t){if(t===i.TrianglesDrawMode)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),e;if(t!==i.TriangleFanDrawMode&&t!==i.TriangleStripDrawMode)return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",t),e;{let r=e.getIndex();if(null===r){let t=[],i=e.getAttribute("position");if(void 0===i)return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),e;for(let e=0;e<i.count;e++)t.push(e);e.setIndex(t),r=e.getIndex()}let o=r.count-2,n=[];if(t===i.TriangleFanDrawMode)for(let e=1;e<=o;e++)n.push(r.getX(0)),n.push(r.getX(e)),n.push(r.getX(e+1));else for(let e=0;e<o;e++)e%2==0?(n.push(r.getX(e)),n.push(r.getX(e+1)),n.push(r.getX(e+2))):(n.push(r.getX(e+2)),n.push(r.getX(e+1)),n.push(r.getX(e)));n.length/3!==o&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");let l=e.clone();return l.setIndex(n),l.clearGroups(),l}}function a(e,t=!1){return console.warn("THREE.BufferGeometryUtils: mergeBufferGeometries() has been renamed to mergeGeometries()."),n(e,t)}});
//# sourceMappingURL=characterMovement.5fc59dbe.js.map
