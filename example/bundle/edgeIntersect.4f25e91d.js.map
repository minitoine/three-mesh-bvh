{"mappings":"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","sources":["<anon>","node_modules/stats.js/build/stats.min.js","src/utils/ExtensionUtilities.js","src/utils/GeometryRayIntersectUtilities.js","example/edgeIntersect.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire4485\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire4485\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"c8CJQ\", function(module, exports) {\n// stats.js - http://github.com/mrdoob/stats.js\n(function(f, e) {\n    module.exports = e();\n})(module.exports, function() {\n    var f = function() {\n        function e(a) {\n            c.appendChild(a.dom);\n            return a;\n        }\n        function u(a) {\n            for(var d = 0; d < c.children.length; d++)c.children[d].style.display = d === a ? \"block\" : \"none\";\n            l = a;\n        }\n        var l = 0, c = document.createElement(\"div\");\n        c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n        c.addEventListener(\"click\", function(a) {\n            a.preventDefault();\n            u(++l % c.children.length);\n        }, !1);\n        var k = (performance || Date).now(), g = k, a = 0, r = e(new f.Panel(\"FPS\", \"#0ff\", \"#002\")), h = e(new f.Panel(\"MS\", \"#0f0\", \"#020\"));\n        if (self.performance && self.performance.memory) var t = e(new f.Panel(\"MB\", \"#f08\", \"#201\"));\n        u(0);\n        return {\n            REVISION: 16,\n            dom: c,\n            addPanel: e,\n            showPanel: u,\n            begin: function() {\n                k = (performance || Date).now();\n            },\n            end: function() {\n                a++;\n                var c = (performance || Date).now();\n                h.update(c - k, 200);\n                if (c > g + 1E3 && (r.update(1E3 * a / (c - g), 100), g = c, a = 0, t)) {\n                    var d = performance.memory;\n                    t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                }\n                return c;\n            },\n            update: function() {\n                k = this.end();\n            },\n            domElement: c,\n            setMode: u\n        };\n    };\n    f.Panel = function(e, f, l) {\n        var c = Infinity, k = 0, g = Math.round, a = g(window.devicePixelRatio || 1), r = 80 * a, h = 48 * a, t = 3 * a, v = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n        q.width = r;\n        q.height = h;\n        q.style.cssText = \"width:80px;height:48px\";\n        var b = q.getContext(\"2d\");\n        b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n        b.textBaseline = \"top\";\n        b.fillStyle = l;\n        b.fillRect(0, 0, r, h);\n        b.fillStyle = f;\n        b.fillText(e, t, v);\n        b.fillRect(d, m, n, p);\n        b.fillStyle = l;\n        b.globalAlpha = .9;\n        b.fillRect(d, m, n, p);\n        return {\n            dom: q,\n            update: function(h, w) {\n                c = Math.min(c, h);\n                k = Math.max(k, h);\n                b.fillStyle = l;\n                b.globalAlpha = 1;\n                b.fillRect(0, 0, r, m);\n                b.fillStyle = f;\n                b.fillText(g(h) + \" \" + e + \" (\" + g(c) + \"-\" + g(k) + \")\", t, v);\n                b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                b.fillRect(d + n - a, m, a, p);\n                b.fillStyle = l;\n                b.globalAlpha = .9;\n                b.fillRect(d + n - a, m, a, g((1 - h / w) * p));\n            }\n        };\n    };\n    return f;\n});\n\n});\n\nparcelRegister(\"4h5hN\", function(module, exports) {\n\n$parcel$export(module.exports, \"acceleratedRaycast\", () => $31ccd9a92979d6bb$export$a0dc2935489c814a);\n$parcel$export(module.exports, \"computeBoundsTree\", () => $31ccd9a92979d6bb$export$749bba8a65fa6d70);\n$parcel$export(module.exports, \"disposeBoundsTree\", () => $31ccd9a92979d6bb$export$e0a981a7a32ddba4);\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $b4YKL = parcelRequire(\"b4YKL\");\n\nvar $ff8ed = parcelRequire(\"ff8ed\");\nconst $31ccd9a92979d6bb$var$ray = /* @__PURE__ */ new (0, $ilwiq.Ray)();\nconst $31ccd9a92979d6bb$var$tmpInverseMatrix = /* @__PURE__ */ new (0, $ilwiq.Matrix4)();\nconst $31ccd9a92979d6bb$var$origMeshRaycastFunc = (0, $ilwiq.Mesh).prototype.raycast;\nfunction $31ccd9a92979d6bb$export$a0dc2935489c814a(raycaster, intersects) {\n    if (this.geometry.boundsTree) {\n        if (this.material === undefined) return;\n        $31ccd9a92979d6bb$var$tmpInverseMatrix.copy(this.matrixWorld).invert();\n        $31ccd9a92979d6bb$var$ray.copy(raycaster.ray).applyMatrix4($31ccd9a92979d6bb$var$tmpInverseMatrix);\n        const bvh = this.geometry.boundsTree;\n        if (raycaster.firstHitOnly === true) {\n            const hit = (0, $b4YKL.convertRaycastIntersect)(bvh.raycastFirst($31ccd9a92979d6bb$var$ray, this.material), this, raycaster);\n            if (hit) intersects.push(hit);\n        } else {\n            const hits = bvh.raycast($31ccd9a92979d6bb$var$ray, this.material);\n            for(let i = 0, l = hits.length; i < l; i++){\n                const hit = (0, $b4YKL.convertRaycastIntersect)(hits[i], this, raycaster);\n                if (hit) intersects.push(hit);\n            }\n        }\n    } else $31ccd9a92979d6bb$var$origMeshRaycastFunc.call(this, raycaster, intersects);\n}\nfunction $31ccd9a92979d6bb$export$749bba8a65fa6d70(options) {\n    this.boundsTree = new (0, $ff8ed.MeshBVH)(this, options);\n    return this.boundsTree;\n}\nfunction $31ccd9a92979d6bb$export$e0a981a7a32ddba4() {\n    this.boundsTree = null;\n}\n\n});\nparcelRegister(\"b4YKL\", function(module, exports) {\n\n$parcel$export(module.exports, \"convertRaycastIntersect\", () => $810f31c6ff4f494e$export$adb106eed99e8cd8);\n// converts the given BVH raycast intersection to align with the three.js raycast\n// structure (include object, world space distance and point).\nfunction $810f31c6ff4f494e$export$adb106eed99e8cd8(hit, object, raycaster) {\n    if (hit === null) return null;\n    hit.point.applyMatrix4(object.matrixWorld);\n    hit.distance = hit.point.distanceTo(raycaster.ray.origin);\n    hit.object = object;\n    if (hit.distance < raycaster.near || hit.distance > raycaster.far) return null;\n    else return hit;\n}\n\n});\n\n\n\nvar $c8CJQ = parcelRequire(\"c8CJQ\");\n\nvar $jiuw3 = parcelRequire(\"jiuw3\");\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $5Rd1x = parcelRequire(\"5Rd1x\");\n\nvar $4h5hN = parcelRequire(\"4h5hN\");\nvar $Mleu6 = parcelRequire(\"Mleu6\");\n$ilwiq.Mesh.prototype.raycast = (0, $4h5hN.acceleratedRaycast);\n$ilwiq.BufferGeometry.prototype.computeBoundsTree = (0, $4h5hN.computeBoundsTree);\n$ilwiq.BufferGeometry.prototype.disposeBoundsTree = (0, $4h5hN.disposeBoundsTree);\nconst $3229ef646432233c$var$params = {\n    position: new $ilwiq.Vector3(),\n    rotation: new $ilwiq.Euler(),\n    scale: new $ilwiq.Vector3(1, 1, 1),\n    speed: 1,\n    displayMeshes: false,\n    distance: 1.1\n};\nlet $3229ef646432233c$var$stats;\nlet $3229ef646432233c$var$scene, $3229ef646432233c$var$camera, $3229ef646432233c$var$renderer, $3229ef646432233c$var$orbitControls;\nlet $3229ef646432233c$var$mesh1, $3229ef646432233c$var$mesh2, $3229ef646432233c$var$lineGroup, $3229ef646432233c$var$line, $3229ef646432233c$var$bgLine;\nlet $3229ef646432233c$var$depth1, $3229ef646432233c$var$depth2, $3229ef646432233c$var$group1, $3229ef646432233c$var$group2;\nlet $3229ef646432233c$var$lastTime = window.performance.now();\n$3229ef646432233c$var$init();\n$3229ef646432233c$var$render();\nfunction $3229ef646432233c$var$init() {\n    const bgColor = 0x66093a;\n    // renderer setup\n    $3229ef646432233c$var$renderer = new $ilwiq.WebGLRenderer({\n        antialias: true\n    });\n    $3229ef646432233c$var$renderer.setPixelRatio(window.devicePixelRatio);\n    $3229ef646432233c$var$renderer.setSize(window.innerWidth, window.innerHeight);\n    $3229ef646432233c$var$renderer.setClearColor(bgColor, 1);\n    $3229ef646432233c$var$renderer.outputEncoding = $ilwiq.sRGBEncoding;\n    document.body.appendChild($3229ef646432233c$var$renderer.domElement);\n    // scene setup\n    $3229ef646432233c$var$scene = new $ilwiq.Scene();\n    $3229ef646432233c$var$scene.fog = new $ilwiq.Fog(1251612, 20, 60);\n    const light = new $ilwiq.DirectionalLight(0xffffff, 0.5);\n    light.position.set(1, 1, 1);\n    $3229ef646432233c$var$scene.add(light);\n    $3229ef646432233c$var$scene.add(new $ilwiq.AmbientLight(0xffffff, 0.4));\n    // geometry setup\n    const radius = 1;\n    const tube = 0.4;\n    const tubularSegments = 100;\n    const radialSegments = 40;\n    const geometry = new $ilwiq.TorusKnotGeometry(radius, tube, tubularSegments, radialSegments);\n    const material = new $ilwiq.MeshPhongMaterial({\n        color: 0xffffff,\n        side: $ilwiq.DoubleSide,\n        shininess: 0.01,\n        polygonOffset: true,\n        polygonOffsetFactor: 1,\n        polygonOffsetUnits: 1,\n        opacity: 0.5,\n        blending: $ilwiq.CustomBlending\n    });\n    const depthMaterial = new $ilwiq.MeshBasicMaterial({\n        polygonOffset: true,\n        polygonOffsetFactor: 1,\n        polygonOffsetUnits: 1,\n        colorWrite: false\n    });\n    // const geometry = new THREE.BoxGeometry();\n    // const geometry = new THREE.BufferGeometry();\n    // geometry.setFromPoints( [\n    // \tnew THREE.Vector3( 1, 0, 0 ),\n    // \tnew THREE.Vector3( - 1, 0, 0 ),\n    // \tnew THREE.Vector3( 0, 1, 0 ),\n    // ] );\n    // geometry.computeVertexNormals();\n    geometry.computeBoundsTree({\n        maxLeafTris: 1,\n        strategy: (0, $Mleu6.SAH)\n    });\n    $3229ef646432233c$var$group1 = new $ilwiq.Group();\n    $3229ef646432233c$var$mesh1 = new $ilwiq.Mesh(geometry, material);\n    $3229ef646432233c$var$mesh1.renderOrder = 2;\n    $3229ef646432233c$var$depth1 = new $ilwiq.Mesh(geometry, depthMaterial);\n    $3229ef646432233c$var$depth1.renderOrder = 1;\n    $3229ef646432233c$var$group1.add($3229ef646432233c$var$depth1, $3229ef646432233c$var$mesh1);\n    $3229ef646432233c$var$group2 = new $ilwiq.Group();\n    $3229ef646432233c$var$mesh2 = new $ilwiq.Mesh(geometry, material);\n    $3229ef646432233c$var$mesh2.renderOrder = 2;\n    $3229ef646432233c$var$depth2 = new $ilwiq.Mesh(geometry, depthMaterial);\n    $3229ef646432233c$var$depth2.renderOrder = 1;\n    $3229ef646432233c$var$group2.add($3229ef646432233c$var$depth2, $3229ef646432233c$var$mesh2);\n    $3229ef646432233c$var$scene.add($3229ef646432233c$var$group1, $3229ef646432233c$var$group2);\n    const lineGeometry = new $ilwiq.BufferGeometry();\n    lineGeometry.setFromPoints([\n        new $ilwiq.Vector3(0, 1, 0),\n        new $ilwiq.Vector3(0, -1, 0)\n    ]);\n    $3229ef646432233c$var$line = new $ilwiq.LineSegments(lineGeometry, new $ilwiq.LineBasicMaterial({\n        color: 0xE91E63\n    }));\n    $3229ef646432233c$var$bgLine = $3229ef646432233c$var$line.clone();\n    $3229ef646432233c$var$bgLine.material = new $ilwiq.LineBasicMaterial({\n        color: 0xE91E63,\n        transparent: true,\n        opacity: 0.25,\n        depthFunc: $ilwiq.GreaterDepth\n    });\n    $3229ef646432233c$var$bgLine.renderOrder = 3;\n    $3229ef646432233c$var$lineGroup = new $ilwiq.Group();\n    $3229ef646432233c$var$lineGroup.add($3229ef646432233c$var$line, $3229ef646432233c$var$bgLine);\n    $3229ef646432233c$var$scene.add($3229ef646432233c$var$lineGroup);\n    // camera setup\n    $3229ef646432233c$var$camera = new $ilwiq.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 50);\n    $3229ef646432233c$var$camera.position.set(2, 2, 2);\n    $3229ef646432233c$var$camera.far = 100;\n    $3229ef646432233c$var$camera.updateProjectionMatrix();\n    $3229ef646432233c$var$orbitControls = new (0, $5Rd1x.OrbitControls)($3229ef646432233c$var$camera, $3229ef646432233c$var$renderer.domElement);\n    // stats setup\n    $3229ef646432233c$var$stats = new (0, (/*@__PURE__*/$parcel$interopDefault($c8CJQ)))();\n    document.body.appendChild($3229ef646432233c$var$stats.dom);\n    const gui = new $jiuw3.GUI();\n    gui.add($3229ef646432233c$var$params, \"speed\", 0, 10, 0.001);\n    gui.add($3229ef646432233c$var$params, \"distance\", 0, 1.5, 0.001);\n    gui.add($3229ef646432233c$var$params, \"displayMeshes\");\n    gui.open();\n    window.addEventListener(\"resize\", function() {\n        $3229ef646432233c$var$camera.aspect = window.innerWidth / window.innerHeight;\n        $3229ef646432233c$var$camera.updateProjectionMatrix();\n        $3229ef646432233c$var$renderer.setSize(window.innerWidth, window.innerHeight);\n    }, false);\n}\nfunction $3229ef646432233c$var$render() {\n    requestAnimationFrame($3229ef646432233c$var$render);\n    const delta = window.performance.now() - $3229ef646432233c$var$lastTime;\n    $3229ef646432233c$var$lastTime = window.performance.now();\n    $3229ef646432233c$var$group1.position.y = -$3229ef646432233c$var$params.distance;\n    $3229ef646432233c$var$group1.rotation.x -= delta * 3 * 0.0001 * $3229ef646432233c$var$params.speed * 0.5;\n    $3229ef646432233c$var$group1.rotation.y -= delta * 0.0001 * $3229ef646432233c$var$params.speed * 0.5;\n    $3229ef646432233c$var$group1.rotation.z -= delta * 0.0002 * $3229ef646432233c$var$params.speed * 0.5;\n    $3229ef646432233c$var$group2.position.y = $3229ef646432233c$var$params.distance;\n    $3229ef646432233c$var$group2.rotation.x += delta * 0.0001 * $3229ef646432233c$var$params.speed;\n    $3229ef646432233c$var$group2.rotation.y += delta * 0.0002 * $3229ef646432233c$var$params.speed;\n    $3229ef646432233c$var$group2.rotation.z += delta * 3 * 0.0001 * $3229ef646432233c$var$params.speed;\n    $3229ef646432233c$var$scene.updateMatrixWorld(true);\n    const matrix2to1 = new $ilwiq.Matrix4().copy($3229ef646432233c$var$mesh1.matrixWorld).invert().multiply($3229ef646432233c$var$mesh2.matrixWorld);\n    const edge = new $ilwiq.Line3();\n    const results = [];\n    $3229ef646432233c$var$mesh1.geometry.boundsTree.bvhcast($3229ef646432233c$var$mesh2.geometry.boundsTree, matrix2to1, {\n        intersectsTriangles (triangle1, triangle2) {\n            if (triangle1.intersectsTriangle(triangle2, edge)) {\n                const { start: start, end: end } = edge;\n                results.push(start.x, start.y, start.z, end.x, end.y, end.z);\n            }\n        }\n    });\n    if (results.length) {\n        const geometry = $3229ef646432233c$var$line.geometry;\n        const posArray = geometry.attributes.position.array;\n        if (posArray.length < results.length) {\n            geometry.dispose();\n            geometry.setAttribute(\"position\", new $ilwiq.BufferAttribute(new Float32Array(results), 3, false));\n        } else posArray.set(results);\n        geometry.setDrawRange(0, results.length / 3);\n        geometry.attributes.position.needsUpdate = true;\n        $3229ef646432233c$var$lineGroup.position.copy($3229ef646432233c$var$group1.position);\n        $3229ef646432233c$var$lineGroup.rotation.copy($3229ef646432233c$var$group1.rotation);\n        $3229ef646432233c$var$lineGroup.scale.copy($3229ef646432233c$var$group1.scale);\n        $3229ef646432233c$var$lineGroup.visible = true;\n    } else $3229ef646432233c$var$lineGroup.visible = false;\n    $3229ef646432233c$var$group1.visible = $3229ef646432233c$var$params.displayMeshes;\n    $3229ef646432233c$var$group2.visible = $3229ef646432233c$var$params.displayMeshes;\n    $3229ef646432233c$var$renderer.render($3229ef646432233c$var$scene, $3229ef646432233c$var$camera);\n    $3229ef646432233c$var$stats.begin();\n    $3229ef646432233c$var$stats.end();\n}\n\n\n//# sourceMappingURL=edgeIntersect.4f25e91d.js.map\n","// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","import { Ray, Matrix4, Mesh } from 'three';\nimport { convertRaycastIntersect } from './GeometryRayIntersectUtilities.js';\nimport { MeshBVH } from '../core/MeshBVH.js';\n\nconst ray = /* @__PURE__ */ new Ray();\nconst tmpInverseMatrix = /* @__PURE__ */ new Matrix4();\nconst origMeshRaycastFunc = Mesh.prototype.raycast;\n\nexport function acceleratedRaycast( raycaster, intersects ) {\n\n\tif ( this.geometry.boundsTree ) {\n\n\t\tif ( this.material === undefined ) return;\n\n\t\ttmpInverseMatrix.copy( this.matrixWorld ).invert();\n\t\tray.copy( raycaster.ray ).applyMatrix4( tmpInverseMatrix );\n\n\t\tconst bvh = this.geometry.boundsTree;\n\t\tif ( raycaster.firstHitOnly === true ) {\n\n\t\t\tconst hit = convertRaycastIntersect( bvh.raycastFirst( ray, this.material ), this, raycaster );\n\t\t\tif ( hit ) {\n\n\t\t\t\tintersects.push( hit );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst hits = bvh.raycast( ray, this.material );\n\t\t\tfor ( let i = 0, l = hits.length; i < l; i ++ ) {\n\n\t\t\t\tconst hit = convertRaycastIntersect( hits[ i ], this, raycaster );\n\t\t\t\tif ( hit ) {\n\n\t\t\t\t\tintersects.push( hit );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\torigMeshRaycastFunc.call( this, raycaster, intersects );\n\n\t}\n\n}\n\nexport function computeBoundsTree( options ) {\n\n\tthis.boundsTree = new MeshBVH( this, options );\n\treturn this.boundsTree;\n\n}\n\nexport function disposeBoundsTree() {\n\n\tthis.boundsTree = null;\n\n}\n","// converts the given BVH raycast intersection to align with the three.js raycast\n// structure (include object, world space distance and point).\nexport function convertRaycastIntersect( hit, object, raycaster ) {\n\n\tif ( hit === null ) {\n\n\t\treturn null;\n\n\t}\n\n\thit.point.applyMatrix4( object.matrixWorld );\n\thit.distance = hit.point.distanceTo( raycaster.ray.origin );\n\thit.object = object;\n\n\tif ( hit.distance < raycaster.near || hit.distance > raycaster.far ) {\n\n\t\treturn null;\n\n\t} else {\n\n\t\treturn hit;\n\n\t}\n\n}\n","import Stats from 'stats.js';\nimport * as dat from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { acceleratedRaycast, computeBoundsTree, disposeBoundsTree, SAH } from '..';\n\nTHREE.Mesh.prototype.raycast = acceleratedRaycast;\nTHREE.BufferGeometry.prototype.computeBoundsTree = computeBoundsTree;\nTHREE.BufferGeometry.prototype.disposeBoundsTree = disposeBoundsTree;\n\nconst params = {\n\tposition: new THREE.Vector3(),\n\trotation: new THREE.Euler(),\n\tscale: new THREE.Vector3( 1, 1, 1 ),\n\tspeed: 1,\n\tdisplayMeshes: false,\n\tdistance: 1.1,\n};\n\nlet stats;\nlet scene, camera, renderer, orbitControls;\nlet mesh1, mesh2, lineGroup, line, bgLine;\nlet depth1, depth2, group1, group2;\nlet lastTime = window.performance.now();\n\ninit();\nrender();\n\nfunction init() {\n\n\tconst bgColor = 0x66093a;\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\tscene.fog = new THREE.Fog( 0x263238 / 2, 20, 60 );\n\n\tconst light = new THREE.DirectionalLight( 0xffffff, 0.5 );\n\tlight.position.set( 1, 1, 1 );\n\tscene.add( light );\n\tscene.add( new THREE.AmbientLight( 0xffffff, 0.4 ) );\n\n\t// geometry setup\n\tconst radius = 1;\n\tconst tube = 0.4;\n\tconst tubularSegments = 100;\n\tconst radialSegments = 40;\n\n\tconst geometry = new THREE.TorusKnotGeometry( radius, tube, tubularSegments, radialSegments );\n\tconst material = new THREE.MeshPhongMaterial( {\n\t\tcolor: 0xffffff,\n\t\tside: THREE.DoubleSide,\n\t\tshininess: 0.01,\n\t\tpolygonOffset: true,\n\t\tpolygonOffsetFactor: 1,\n\t\tpolygonOffsetUnits: 1,\n\t\topacity: 0.5,\n\t\tblending: THREE.CustomBlending\n\t} );\n\tconst depthMaterial = new THREE.MeshBasicMaterial( {\n\t\tpolygonOffset: true,\n\t\tpolygonOffsetFactor: 1,\n\t\tpolygonOffsetUnits: 1,\n\t\tcolorWrite: false,\n\t} );\n\n\t// const geometry = new THREE.BoxGeometry();\n\n\t// const geometry = new THREE.BufferGeometry();\n\t// geometry.setFromPoints( [\n\t// \tnew THREE.Vector3( 1, 0, 0 ),\n\t// \tnew THREE.Vector3( - 1, 0, 0 ),\n\t// \tnew THREE.Vector3( 0, 1, 0 ),\n\t// ] );\n\t// geometry.computeVertexNormals();\n\tgeometry.computeBoundsTree( { maxLeafTris: 1, strategy: SAH } );\n\n\tgroup1 = new THREE.Group();\n\tmesh1 = new THREE.Mesh( geometry, material );\n\tmesh1.renderOrder = 2;\n\tdepth1 = new THREE.Mesh( geometry, depthMaterial );\n\tdepth1.renderOrder = 1;\n\tgroup1.add( depth1, mesh1 );\n\n\tgroup2 = new THREE.Group();\n\tmesh2 = new THREE.Mesh( geometry, material );\n\tmesh2.renderOrder = 2;\n\tdepth2 = new THREE.Mesh( geometry, depthMaterial );\n\tdepth2.renderOrder = 1;\n\tgroup2.add( depth2, mesh2 );\n\n\tscene.add( group1, group2 );\n\n\tconst lineGeometry = new THREE.BufferGeometry();\n\tlineGeometry.setFromPoints( [ new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, - 1, 0 ) ] );\n\tline = new THREE.LineSegments( lineGeometry, new THREE.LineBasicMaterial( { color: 0xE91E63 } ) );\n\n\tbgLine = line.clone();\n\tbgLine.material = new THREE.LineBasicMaterial( {\n\t\tcolor: 0xE91E63,\n\t\ttransparent: true,\n\t\topacity: 0.25,\n\t\tdepthFunc: THREE.GreaterDepth,\n\t} );\n\tbgLine.renderOrder = 3;\n\n\tlineGroup = new THREE.Group();\n\tlineGroup.add( line, bgLine );\n\tscene.add( lineGroup );\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( 2, 2, 2 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\torbitControls = new OrbitControls( camera, renderer.domElement );\n\n\t// stats setup\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\n\tconst gui = new dat.GUI();\n\tgui.add( params, 'speed', 0, 10, 0.001 );\n\tgui.add( params, 'distance', 0, 1.5, 0.001 );\n\tgui.add( params, 'displayMeshes' );\n\n\tgui.open();\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n}\n\nfunction render() {\n\n\trequestAnimationFrame( render );\n\n\tconst delta = window.performance.now() - lastTime;\n\tlastTime = window.performance.now();\n\n\tgroup1.position.y = - params.distance;\n\tgroup1.rotation.x -= delta * 3 * 0.0001 * params.speed * 0.5;\n\tgroup1.rotation.y -= delta * 1 * 0.0001 * params.speed * 0.5;\n\tgroup1.rotation.z -= delta * 2 * 0.0001 * params.speed * 0.5;\n\n\tgroup2.position.y = params.distance;\n\tgroup2.rotation.x += delta * 0.0001 * params.speed;\n\tgroup2.rotation.y += delta * 2 * 0.0001 * params.speed;\n\tgroup2.rotation.z += delta * 3 * 0.0001 * params.speed;\n\n\tscene.updateMatrixWorld( true );\n\n\tconst matrix2to1 = new THREE.Matrix4()\n\t\t.copy( mesh1.matrixWorld )\n\t\t.invert()\n\t\t.multiply( mesh2.matrixWorld );\n\n\n\tconst edge = new THREE.Line3();\n\tconst results = [];\n\tmesh1.geometry.boundsTree.bvhcast( mesh2.geometry.boundsTree, matrix2to1, {\n\n\t\tintersectsTriangles( triangle1, triangle2 ) {\n\n\t\t\tif ( triangle1.intersectsTriangle( triangle2, edge ) ) {\n\n\t\t\t\tconst { start, end } = edge;\n\t\t\t\tresults.push(\n\t\t\t\t\tstart.x,\n\t\t\t\t\tstart.y,\n\t\t\t\t\tstart.z,\n\t\t\t\t\tend.x,\n\t\t\t\t\tend.y,\n\t\t\t\t\tend.z,\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tif ( results.length ) {\n\n\t\tconst geometry = line.geometry;\n\t\tconst posArray = geometry.attributes.position.array;\n\t\tif ( posArray.length < results.length ) {\n\n\t\t\tgeometry.dispose();\n\t\t\tgeometry.setAttribute( 'position', new THREE.BufferAttribute( new Float32Array( results ), 3, false ) );\n\n\t\t} else {\n\n\t\t\tposArray.set( results );\n\n\t\t}\n\n\t\tgeometry.setDrawRange( 0, results.length / 3 );\n\t\tgeometry.attributes.position.needsUpdate = true;\n\t\tlineGroup.position.copy( group1.position );\n\t\tlineGroup.rotation.copy( group1.rotation );\n\t\tlineGroup.scale.copy( group1.scale );\n\t\tlineGroup.visible = true;\n\n\t} else {\n\n\t\tlineGroup.visible = false;\n\n\t}\n\n\tgroup1.visible = params.displayMeshes;\n\tgroup2.visible = params.displayMeshes;\n\trenderer.render( scene, camera );\n\n\tstats.begin();\n\tstats.end();\n\n}\n\n"],"names":["$3229ef646432233c$var$stats","$3229ef646432233c$var$scene","$3229ef646432233c$var$camera","$3229ef646432233c$var$renderer","$3229ef646432233c$var$mesh1","$3229ef646432233c$var$mesh2","$3229ef646432233c$var$lineGroup","$3229ef646432233c$var$line","$3229ef646432233c$var$bgLine","$3229ef646432233c$var$depth1","$3229ef646432233c$var$depth2","$3229ef646432233c$var$group1","$3229ef646432233c$var$group2","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","f","a","c","appendChild","dom","u","d","children","length","style","display","l","document","createElement","cssText","addEventListener","preventDefault","k","performance","Date","now","g","r","Panel","h","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","Math","round","window","devicePixelRatio","m","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","$31ccd9a92979d6bb$export$a0dc2935489c814a","$31ccd9a92979d6bb$export$749bba8a65fa6d70","$31ccd9a92979d6bb$export$e0a981a7a32ddba4","$ilwiq","$b4YKL","$ff8ed","$31ccd9a92979d6bb$var$ray","Ray","$31ccd9a92979d6bb$var$tmpInverseMatrix","Matrix4","$31ccd9a92979d6bb$var$origMeshRaycastFunc","Mesh","prototype","raycast","raycaster","intersects","geometry","boundsTree","undefined","material","copy","matrixWorld","invert","ray","applyMatrix4","bvh","firstHitOnly","hit","convertRaycastIntersect","raycastFirst","push","hits","i","options","MeshBVH","$810f31c6ff4f494e$export$adb106eed99e8cd8","object","point","distance","distanceTo","origin","near","far","$c8CJQ","$jiuw3","$5Rd1x","$4h5hN","$Mleu6","acceleratedRaycast","BufferGeometry","computeBoundsTree","disposeBoundsTree","$3229ef646432233c$var$params","position","Vector3","rotation","Euler","scale","speed","displayMeshes","$3229ef646432233c$var$lastTime","$3229ef646432233c$var$init","WebGLRenderer","antialias","setPixelRatio","setSize","innerWidth","innerHeight","setClearColor","outputEncoding","sRGBEncoding","body","Scene","fog","Fog","light","DirectionalLight","add","AmbientLight","TorusKnotGeometry","MeshPhongMaterial","color","side","DoubleSide","shininess","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","opacity","blending","CustomBlending","depthMaterial","MeshBasicMaterial","colorWrite","maxLeafTris","strategy","SAH","Group","renderOrder","lineGeometry","setFromPoints","LineSegments","LineBasicMaterial","clone","transparent","depthFunc","GreaterDepth","PerspectiveCamera","updateProjectionMatrix","OrbitControls","__esModule","default","gui","GUI","open","aspect","$3229ef646432233c$var$render","requestAnimationFrame","delta","y","x","z","updateMatrixWorld","matrix2to1","multiply","edge","Line3","results","bvhcast","intersectsTriangles","triangle1","triangle2","intersectsTriangle","start","posArray","attributes","array","dispose","setAttribute","BufferAttribute","Float32Array","setDrawRange","needsUpdate","visible","render"],"version":3,"file":"edgeIntersect.4f25e91d.js.map"}