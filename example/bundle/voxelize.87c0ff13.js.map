{"mappings":"ISUI,EAAU,EAAQ,EAAO,EAAK,EAC9B,EAAkB,E,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,W,I,E,A,G,E,GRTtB,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,G,E,Q,S,C,C,C,MCT4K,CAApB,CAAA,EAAA,OAAA,CAAlF,EAAA,OAAA,EAEgC,CAFsE,EAAE,WAAW,SAAS,EAAE,CAAC,EAAuB,OAArB,EAAE,WAAW,CAAC,EAAE,GAAG,EAAS,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,OAAO,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,SAAS,aAAa,CAAC,MAAO,CAAA,EAAE,KAAK,CAAC,OAAO,CAAC,uEAAuE,EAAE,gBAAgB,CAAC,QAAQ,SAAS,CAAC,EAAE,EAAE,cAAc,GAClgB,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,EAAG,AAAA,CAAA,aAAa,IAAA,EAAM,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,MAAM,OAAO,SAAS,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,KAAK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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/stats.js/build/stats.min.js","node_modules/three/examples/jsm/geometries/RoundedBoxGeometry.js","src/workers/GenerateMeshBVHWorker.js","src/workers/utils/WorkerBase.js","node_modules/@parcel/runtime-js/lib/runtime-b9d8bae84a2a3c49.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-900a79e038a11020.js","example/voxelize.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire4485\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire4485\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nparcelRegister(\"c8CJQ\", function(module, exports) {\n// stats.js - http://github.com/mrdoob/stats.js\n(function(f, e) {\n    module.exports = e();\n})(module.exports, function() {\n    var f = function() {\n        function e(a) {\n            c.appendChild(a.dom);\n            return a;\n        }\n        function u(a) {\n            for(var d = 0; d < c.children.length; d++)c.children[d].style.display = d === a ? \"block\" : \"none\";\n            l = a;\n        }\n        var l = 0, c = document.createElement(\"div\");\n        c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n        c.addEventListener(\"click\", function(a) {\n            a.preventDefault();\n            u(++l % c.children.length);\n        }, !1);\n        var k = (performance || Date).now(), g = k, a = 0, r = e(new f.Panel(\"FPS\", \"#0ff\", \"#002\")), h = e(new f.Panel(\"MS\", \"#0f0\", \"#020\"));\n        if (self.performance && self.performance.memory) var t = e(new f.Panel(\"MB\", \"#f08\", \"#201\"));\n        u(0);\n        return {\n            REVISION: 16,\n            dom: c,\n            addPanel: e,\n            showPanel: u,\n            begin: function() {\n                k = (performance || Date).now();\n            },\n            end: function() {\n                a++;\n                var c = (performance || Date).now();\n                h.update(c - k, 200);\n                if (c > g + 1E3 && (r.update(1E3 * a / (c - g), 100), g = c, a = 0, t)) {\n                    var d = performance.memory;\n                    t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                }\n                return c;\n            },\n            update: function() {\n                k = this.end();\n            },\n            domElement: c,\n            setMode: u\n        };\n    };\n    f.Panel = function(e, f, l) {\n        var c = Infinity, k = 0, g = Math.round, a = g(window.devicePixelRatio || 1), r = 80 * a, h = 48 * a, t = 3 * a, v = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n        q.width = r;\n        q.height = h;\n        q.style.cssText = \"width:80px;height:48px\";\n        var b = q.getContext(\"2d\");\n        b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n        b.textBaseline = \"top\";\n        b.fillStyle = l;\n        b.fillRect(0, 0, r, h);\n        b.fillStyle = f;\n        b.fillText(e, t, v);\n        b.fillRect(d, m, n, p);\n        b.fillStyle = l;\n        b.globalAlpha = .9;\n        b.fillRect(d, m, n, p);\n        return {\n            dom: q,\n            update: function(h, w) {\n                c = Math.min(c, h);\n                k = Math.max(k, h);\n                b.fillStyle = l;\n                b.globalAlpha = 1;\n                b.fillRect(0, 0, r, m);\n                b.fillStyle = f;\n                b.fillText(g(h) + \" \" + e + \" (\" + g(c) + \"-\" + g(k) + \")\", t, v);\n                b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                b.fillRect(d + n - a, m, a, p);\n                b.fillStyle = l;\n                b.globalAlpha = .9;\n                b.fillRect(d + n - a, m, a, g((1 - h / w) * p));\n            }\n        };\n    };\n    return f;\n});\n\n});\n\nparcelRegister(\"apoN1\", function(module, exports) {\n\n$parcel$export(module.exports, \"RoundedBoxGeometry\", () => $793f77e8093852e4$export$418f4e74cfe71a96);\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\nconst $793f77e8093852e4$var$_tempNormal = new (0, $ilwiq.Vector3)();\nfunction $793f77e8093852e4$var$getUv(faceDirVector, normal, uvAxis, projectionAxis, radius, sideLength) {\n    const totArcLength = 2 * Math.PI * radius / 4;\n    // length of the planes between the arcs on each axis\n    const centerLength = Math.max(sideLength - 2 * radius, 0);\n    const halfArc = Math.PI / 4;\n    // Get the vector projected onto the Y plane\n    $793f77e8093852e4$var$_tempNormal.copy(normal);\n    $793f77e8093852e4$var$_tempNormal[projectionAxis] = 0;\n    $793f77e8093852e4$var$_tempNormal.normalize();\n    // total amount of UV space alloted to a single arc\n    const arcUvRatio = 0.5 * totArcLength / (totArcLength + centerLength);\n    // the distance along one arc the point is at\n    const arcAngleRatio = 1.0 - $793f77e8093852e4$var$_tempNormal.angleTo(faceDirVector) / halfArc;\n    if (Math.sign($793f77e8093852e4$var$_tempNormal[uvAxis]) === 1) return arcAngleRatio * arcUvRatio;\n    else {\n        // total amount of UV space alloted to the plane between the arcs\n        const lenUv = centerLength / (totArcLength + centerLength);\n        return lenUv + arcUvRatio + arcUvRatio * (1.0 - arcAngleRatio);\n    }\n}\nclass $793f77e8093852e4$export$418f4e74cfe71a96 extends (0, $ilwiq.BoxGeometry) {\n    constructor(width = 1, height = 1, depth = 1, segments = 2, radius = 0.1){\n        // ensure segments is odd so we have a plane connecting the rounded corners\n        segments = segments * 2 + 1;\n        // ensure radius isn't bigger than shortest side\n        radius = Math.min(width / 2, height / 2, depth / 2, radius);\n        super(1, 1, 1, segments, segments, segments);\n        // if we just have one segment we're the same as a regular box\n        if (segments === 1) return;\n        const geometry2 = this.toNonIndexed();\n        this.index = null;\n        this.attributes.position = geometry2.attributes.position;\n        this.attributes.normal = geometry2.attributes.normal;\n        this.attributes.uv = geometry2.attributes.uv;\n        //\n        const position = new (0, $ilwiq.Vector3)();\n        const normal = new (0, $ilwiq.Vector3)();\n        const box = new (0, $ilwiq.Vector3)(width, height, depth).divideScalar(2).subScalar(radius);\n        const positions = this.attributes.position.array;\n        const normals = this.attributes.normal.array;\n        const uvs = this.attributes.uv.array;\n        const faceTris = positions.length / 6;\n        const faceDirVector = new (0, $ilwiq.Vector3)();\n        const halfSegmentSize = 0.5 / segments;\n        for(let i = 0, j = 0; i < positions.length; i += 3, j += 2){\n            position.fromArray(positions, i);\n            normal.copy(position);\n            normal.x -= Math.sign(normal.x) * halfSegmentSize;\n            normal.y -= Math.sign(normal.y) * halfSegmentSize;\n            normal.z -= Math.sign(normal.z) * halfSegmentSize;\n            normal.normalize();\n            positions[i + 0] = box.x * Math.sign(position.x) + normal.x * radius;\n            positions[i + 1] = box.y * Math.sign(position.y) + normal.y * radius;\n            positions[i + 2] = box.z * Math.sign(position.z) + normal.z * radius;\n            normals[i + 0] = normal.x;\n            normals[i + 1] = normal.y;\n            normals[i + 2] = normal.z;\n            const side = Math.floor(i / faceTris);\n            switch(side){\n                case 0:\n                    // generate UVs along Z then Y\n                    faceDirVector.set(1, 0, 0);\n                    uvs[j + 0] = $793f77e8093852e4$var$getUv(faceDirVector, normal, \"z\", \"y\", radius, depth);\n                    uvs[j + 1] = 1.0 - $793f77e8093852e4$var$getUv(faceDirVector, normal, \"y\", \"z\", radius, height);\n                    break;\n                case 1:\n                    // generate UVs along Z then Y\n                    faceDirVector.set(-1, 0, 0);\n                    uvs[j + 0] = 1.0 - $793f77e8093852e4$var$getUv(faceDirVector, normal, \"z\", \"y\", radius, depth);\n                    uvs[j + 1] = 1.0 - $793f77e8093852e4$var$getUv(faceDirVector, normal, \"y\", \"z\", radius, height);\n                    break;\n                case 2:\n                    // generate UVs along X then Z\n                    faceDirVector.set(0, 1, 0);\n                    uvs[j + 0] = 1.0 - $793f77e8093852e4$var$getUv(faceDirVector, normal, \"x\", \"z\", radius, width);\n                    uvs[j + 1] = $793f77e8093852e4$var$getUv(faceDirVector, normal, \"z\", \"x\", radius, depth);\n                    break;\n                case 3:\n                    // generate UVs along X then Z\n                    faceDirVector.set(0, -1, 0);\n                    uvs[j + 0] = 1.0 - $793f77e8093852e4$var$getUv(faceDirVector, normal, \"x\", \"z\", radius, width);\n                    uvs[j + 1] = 1.0 - $793f77e8093852e4$var$getUv(faceDirVector, normal, \"z\", \"x\", radius, depth);\n                    break;\n                case 4:\n                    // generate UVs along X then Y\n                    faceDirVector.set(0, 0, 1);\n                    uvs[j + 0] = 1.0 - $793f77e8093852e4$var$getUv(faceDirVector, normal, \"x\", \"y\", radius, width);\n                    uvs[j + 1] = 1.0 - $793f77e8093852e4$var$getUv(faceDirVector, normal, \"y\", \"x\", radius, height);\n                    break;\n                case 5:\n                    // generate UVs along X then Y\n                    faceDirVector.set(0, 0, -1);\n                    uvs[j + 0] = $793f77e8093852e4$var$getUv(faceDirVector, normal, \"x\", \"y\", radius, width);\n                    uvs[j + 1] = 1.0 - $793f77e8093852e4$var$getUv(faceDirVector, normal, \"y\", \"x\", radius, height);\n                    break;\n            }\n        }\n    }\n}\n\n});\n\nparcelRegister(\"8todg\", function(module, exports) {\n\n$parcel$export(module.exports, \"GenerateMeshBVHWorker\", () => $62b3d05905f83386$export$426cc6213ad628cf);\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $ff8ed = parcelRequire(\"ff8ed\");\n\nvar $77YCt = parcelRequire(\"77YCt\");\n\nclass $62b3d05905f83386$export$426cc6213ad628cf extends (0, $77YCt.WorkerBase) {\n    constructor(){\n        const worker = new Worker((parcelRequire(\"bSef7\")));\n        super(worker);\n        this.name = \"GenerateMeshBVHWorker\";\n    }\n    runTask(worker, geometry, options = {}) {\n        return new Promise((resolve, reject)=>{\n            if (geometry.getAttribute(\"position\").isInterleavedBufferAttribute || geometry.index && geometry.index.isInterleavedBufferAttribute) throw new Error(\"GenerateMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.\");\n            worker.onerror = (e)=>{\n                reject(new Error(`GenerateMeshBVHWorker: ${e.message}`));\n            };\n            worker.onmessage = (e)=>{\n                const { data: data } = e;\n                if (data.error) {\n                    reject(new Error(data.error));\n                    worker.onmessage = null;\n                } else if (data.serialized) {\n                    const { serialized: serialized, position: position } = data;\n                    const bvh = (0, $ff8ed.MeshBVH).deserialize(serialized, geometry, {\n                        setIndex: false\n                    });\n                    const boundsOptions = Object.assign({\n                        setBoundingBox: true\n                    }, options);\n                    // we need to replace the arrays because they're neutered entirely by the\n                    // webworker transfer.\n                    geometry.attributes.position.array = position;\n                    if (serialized.index) {\n                        if (geometry.index) geometry.index.array = serialized.index;\n                        else {\n                            const newIndex = new (0, $ilwiq.BufferAttribute)(serialized.index, 1, false);\n                            geometry.setIndex(newIndex);\n                        }\n                    }\n                    if (boundsOptions.setBoundingBox) geometry.boundingBox = bvh.getBoundingBox(new (0, $ilwiq.Box3)());\n                    if (options.onProgress) options.onProgress(data.progress);\n                    resolve(bvh);\n                    worker.onmessage = null;\n                } else if (options.onProgress) options.onProgress(data.progress);\n            };\n            const index = geometry.index ? geometry.index.array : null;\n            const position = geometry.attributes.position.array;\n            const transferable = [\n                position\n            ];\n            if (index) transferable.push(index);\n            worker.postMessage({\n                index: index,\n                position: position,\n                options: {\n                    ...options,\n                    onProgress: null,\n                    includedProgressCallback: Boolean(options.onProgress),\n                    groups: [\n                        ...geometry.groups\n                    ]\n                }\n            }, transferable.map((arr)=>arr.buffer).filter((v)=>typeof SharedArrayBuffer === \"undefined\" || !(v instanceof SharedArrayBuffer)));\n        });\n    }\n}\n\n});\nparcelRegister(\"77YCt\", function(module, exports) {\n\n$parcel$export(module.exports, \"WorkerBase\", () => $5308359e4b33977a$export$8dbf7c43841b75b7);\nclass $5308359e4b33977a$export$8dbf7c43841b75b7 {\n    constructor(worker){\n        this.name = \"WorkerBase\";\n        this.running = false;\n        this.worker = worker;\n        this.worker.onerror = (e)=>{\n            if (e.message) throw new Error(`${this.name}: Could not create Web Worker with error \"${e.message}\"`);\n            else throw new Error(`${this.name}: Could not create Web Worker.`);\n        };\n    }\n    runTask() {}\n    generate(...args) {\n        if (this.running) throw new Error(\"GenerateMeshBVHWorker: Already running job.\");\n        if (this.worker === null) throw new Error(\"GenerateMeshBVHWorker: Worker has been disposed.\");\n        this.running = true;\n        const promise = this.runTask(this.worker, ...args);\n        promise.finally(()=>{\n            this.running = false;\n        });\n        return promise;\n    }\n    dispose() {\n        this.worker.terminate();\n        this.worker = null;\n    }\n}\n\n});\n\nparcelRegister(\"bSef7\", function(module, exports) {\n\nvar $7ryUf = parcelRequire(\"7ryUf\");\nlet $8a4fc930af686efe$var$url = new URL(\"generateMeshBVH.worker.17f4c1c5.js\", import.meta.url);\nmodule.exports = $7ryUf($8a4fc930af686efe$var$url.toString(), $8a4fc930af686efe$var$url.origin, true);\n\n});\nparcelRegister(\"7ryUf\", function(module, exports) {\n\"use strict\";\nmodule.exports = function(workerUrl, origin, isESM) {\n    if (origin === self.location.origin) // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n    else {\n        // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n        var source = isESM ? \"import \" + JSON.stringify(workerUrl) + \";\" : \"importScripts(\" + JSON.stringify(workerUrl) + \");\";\n        return URL.createObjectURL(new Blob([\n            source\n        ], {\n            type: \"application/javascript\"\n        }));\n    }\n};\n\n});\n\n\n\nvar $e5f8803ef1869043$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"3xzEA\",\"voxelize.87c0ff13.js\",\"6J6WW\",\"generateMeshBVH.worker.17f4c1c5.js\",\"acVmZ\",\"generateMeshBVH.worker.aad48e6e.js\",\"gr8Yf\",\"asyncGenerate.22609466.js\",\"j19h5\",\"asyncGenerate.e8b1599c.js\",\"30Pwg\",\"asyncGenerate.77ce35af.js\",\"2tzBs\",\"characterMovement.89c1b67b.js\",\"6UuCC\",\"characterMovement.5fc59dbe.js\",\"6mMEU\",\"characterMovement.fc8349f1.js\",\"i0zVc\",\"clippedEdges.dcf40b33.js\"]'));\n\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $7lx9d = parcelRequire(\"7lx9d\");\n\nvar $kp7Te = parcelRequire(\"kp7Te\");\n\nvar $c8CJQ = parcelRequire(\"c8CJQ\");\n\nvar $jiuw3 = parcelRequire(\"jiuw3\");\n\nvar $ff8ed = parcelRequire(\"ff8ed\");\n\nvar $5Rd1x = parcelRequire(\"5Rd1x\");\n\nvar $apoN1 = parcelRequire(\"apoN1\");\n\nvar $8todg = parcelRequire(\"8todg\");\nlet $b62638e05a324a13$var$renderer, $b62638e05a324a13$var$camera, $b62638e05a324a13$var$scene, $b62638e05a324a13$var$gui, $b62638e05a324a13$var$stats, $b62638e05a324a13$var$outputContainer;\nlet $b62638e05a324a13$var$voxels, $b62638e05a324a13$var$controls, $b62638e05a324a13$var$boxHelper;\nlet $b62638e05a324a13$var$needsUpdate = false;\nlet $b62638e05a324a13$var$voxelTask = null;\nconst $b62638e05a324a13$var$params = {\n    model: \"Torus Knot\",\n    scale: 0.75,\n    resolution: 30,\n    solid: true,\n    displayMesh: true,\n    displayBounds: false,\n    insideOnly: false,\n    rebuild: ()=>$b62638e05a324a13$var$needsUpdate = true\n};\nconst $b62638e05a324a13$var$models = {};\n$b62638e05a324a13$var$init();\n$b62638e05a324a13$var$render();\nfunction $b62638e05a324a13$var$init() {\n    const bgColor = 0x161e1d;\n    $b62638e05a324a13$var$outputContainer = document.getElementById(\"output\");\n    // renderer setup\n    $b62638e05a324a13$var$renderer = new $ilwiq.WebGLRenderer({\n        antialias: true\n    });\n    $b62638e05a324a13$var$renderer.setPixelRatio(window.devicePixelRatio);\n    $b62638e05a324a13$var$renderer.setSize(window.innerWidth, window.innerHeight);\n    $b62638e05a324a13$var$renderer.setClearColor(bgColor, 1);\n    $b62638e05a324a13$var$renderer.outputEncoding = $ilwiq.sRGBEncoding;\n    document.body.appendChild($b62638e05a324a13$var$renderer.domElement);\n    // scene setup\n    $b62638e05a324a13$var$scene = new $ilwiq.Scene();\n    const light = new $ilwiq.DirectionalLight(0xffffff, 1);\n    light.position.set(3, 6, 9);\n    $b62638e05a324a13$var$scene.add(light);\n    const revLight = new $ilwiq.DirectionalLight(0xffffff, 0.1);\n    revLight.position.set(-3, -6, -9);\n    $b62638e05a324a13$var$scene.add(revLight);\n    const ambient = new $ilwiq.AmbientLight(0xffffff, 0.25);\n    $b62638e05a324a13$var$scene.add(ambient);\n    // camera setup\n    $b62638e05a324a13$var$camera = new $ilwiq.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 50);\n    $b62638e05a324a13$var$camera.position.set(1, 0.5, 1);\n    $b62638e05a324a13$var$camera.far = 100;\n    $b62638e05a324a13$var$camera.updateProjectionMatrix();\n    $b62638e05a324a13$var$controls = new (0, $5Rd1x.OrbitControls)($b62638e05a324a13$var$camera, $b62638e05a324a13$var$renderer.domElement);\n    // stats setup\n    $b62638e05a324a13$var$stats = new (0, (/*@__PURE__*/$parcel$interopDefault($c8CJQ)))();\n    document.body.appendChild($b62638e05a324a13$var$stats.dom);\n    const wireframeMaterial = new $ilwiq.MeshBasicMaterial({\n        transparent: true,\n        wireframe: true,\n        depthWrite: false,\n        opacity: 0.02\n    });\n    // load the model\n    new (0, $7lx9d.GLTFLoader)().setMeshoptDecoder((0, $kp7Te.MeshoptDecoder)).load(\"https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/happy-buddha/buddha.glb\", (gltf)=>{\n        const model = gltf.scene.children[0];\n        model.geometry.center();\n        model.material = wireframeMaterial;\n        model.scale.setScalar(1.5);\n        model.rotation.y = -Math.PI / 2;\n        const generator = new (0, $8todg.GenerateMeshBVHWorker)();\n        generator.generate(model.geometry).then((bvh)=>{\n            $b62638e05a324a13$var$scene.add(model);\n            $b62638e05a324a13$var$models[\"Buddha\"] = {\n                model: model,\n                bvh: bvh\n            };\n            if ($b62638e05a324a13$var$params.model === \"Buddha\") $b62638e05a324a13$var$needsUpdate = true;\n        });\n    });\n    new (0, $7lx9d.GLTFLoader)().setMeshoptDecoder((0, $kp7Te.MeshoptDecoder)).load(\"https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/stanford-bunny/bunny.glb\", (gltf)=>{\n        const model = gltf.scene.children[0];\n        model.geometry.center();\n        model.material = wireframeMaterial;\n        model.rotation.y = Math.PI / 2;\n        model.scale.setScalar(0.65);\n        const generator = new (0, $8todg.GenerateMeshBVHWorker)();\n        generator.generate(model.geometry).then((bvh)=>{\n            $b62638e05a324a13$var$scene.add(model);\n            $b62638e05a324a13$var$models[\"Bunny\"] = {\n                model: model,\n                bvh: bvh\n            };\n            if ($b62638e05a324a13$var$params.model === \"Bunny\") $b62638e05a324a13$var$needsUpdate = true;\n        });\n    });\n    {\n        const model = new $ilwiq.Mesh(new $ilwiq.TorusKnotGeometry(0.3, 0.1, 400, 60), wireframeMaterial);\n        const bvh = new (0, $ff8ed.MeshBVH)(model.geometry);\n        $b62638e05a324a13$var$scene.add(model);\n        $b62638e05a324a13$var$models[\"Torus Knot\"] = {\n            bvh: bvh,\n            model: model\n        };\n        $b62638e05a324a13$var$needsUpdate = true;\n    }\n    $b62638e05a324a13$var$models[\"Buddha\"] = {\n        model: null,\n        bvh: null\n    };\n    $b62638e05a324a13$var$models[\"Bunny\"] = {\n        model: null,\n        bvh: null\n    };\n    const boxHelperMesh = new $ilwiq.Mesh(new $ilwiq.BoxGeometry());\n    $b62638e05a324a13$var$boxHelper = new $ilwiq.BoxHelper(boxHelperMesh, 0xffffff);\n    $b62638e05a324a13$var$boxHelper.material.opacity = 0.35;\n    $b62638e05a324a13$var$boxHelper.material.transparent = true;\n    $b62638e05a324a13$var$scene.add($b62638e05a324a13$var$boxHelper);\n    $b62638e05a324a13$var$gui = new (0, $jiuw3.GUI)();\n    $b62638e05a324a13$var$gui.add($b62638e05a324a13$var$params, \"model\", Object.keys($b62638e05a324a13$var$models)).onChange(()=>{\n        $b62638e05a324a13$var$needsUpdate = true;\n    });\n    const computeFolder = $b62638e05a324a13$var$gui.addFolder(\"voxelize\");\n    computeFolder.add($b62638e05a324a13$var$params, \"resolution\", 5, 75, 1).onChange(()=>{\n        $b62638e05a324a13$var$needsUpdate = true;\n    });\n    computeFolder.add($b62638e05a324a13$var$params, \"scale\", 0.1, 4).onChange(()=>{\n        $b62638e05a324a13$var$needsUpdate = true;\n    });\n    computeFolder.add($b62638e05a324a13$var$params, \"solid\").onChange(()=>{\n        $b62638e05a324a13$var$needsUpdate = true;\n    });\n    computeFolder.add($b62638e05a324a13$var$params, \"insideOnly\").onChange(()=>{\n        $b62638e05a324a13$var$needsUpdate = true;\n    });\n    computeFolder.add($b62638e05a324a13$var$params, \"rebuild\");\n    const helpersFolder = $b62638e05a324a13$var$gui.addFolder(\"helpers\");\n    helpersFolder.add($b62638e05a324a13$var$params, \"displayMesh\");\n    helpersFolder.add($b62638e05a324a13$var$params, \"displayBounds\");\n    window.addEventListener(\"resize\", function() {\n        $b62638e05a324a13$var$camera.aspect = window.innerWidth / window.innerHeight;\n        $b62638e05a324a13$var$camera.updateProjectionMatrix();\n        $b62638e05a324a13$var$renderer.setSize(window.innerWidth, window.innerHeight);\n    }, false);\n}\n// regenerate the mesh and bvh\nfunction* $b62638e05a324a13$var$rebuildVoxels() {\n    const resolution = $b62638e05a324a13$var$params.resolution;\n    const totalCount = resolution ** 3;\n    const dimensions = $b62638e05a324a13$var$params.scale;\n    const step = dimensions / resolution;\n    const outsideColor = new $ilwiq.Color(0xffffff);\n    const insideColor = new $ilwiq.Color(0xFFC107).convertSRGBToLinear();\n    if ($b62638e05a324a13$var$voxels && $b62638e05a324a13$var$voxels.instanceMatrix.count !== totalCount) {\n        $b62638e05a324a13$var$voxels.material.dispose();\n        $b62638e05a324a13$var$voxels.dispose();\n        $b62638e05a324a13$var$voxels.parent.remove($b62638e05a324a13$var$voxels);\n        $b62638e05a324a13$var$voxels = null;\n    }\n    const { model: model, bvh: bvh } = $b62638e05a324a13$var$models[$b62638e05a324a13$var$params.model];\n    if (!model) return;\n    if (!$b62638e05a324a13$var$voxels) {\n        // set color here to force a color buffer to initialize\n        $b62638e05a324a13$var$voxels = new $ilwiq.InstancedMesh(new (0, $apoN1.RoundedBoxGeometry)(1, 1, 1, 4, 0.1), new $ilwiq.MeshStandardMaterial(), totalCount);\n        $b62638e05a324a13$var$voxels.setColorAt(0, outsideColor);\n        $b62638e05a324a13$var$scene.add($b62638e05a324a13$var$voxels);\n    }\n    const minStart = -dimensions / 2.0 + step * 0.5;\n    const position = new $ilwiq.Vector3();\n    const quaternion = new $ilwiq.Quaternion();\n    const scale = new $ilwiq.Vector3().setScalar(step);\n    const worldMatrix = new $ilwiq.Matrix4();\n    const box = new $ilwiq.Box3();\n    const invMat = new $ilwiq.Matrix4().copy(model.matrixWorld).invert();\n    const ray = new $ilwiq.Ray();\n    ray.direction.set(0, 0, 1);\n    let voxelCount = 0;\n    for(let y = 0; y < resolution; y++){\n        for(let x = 0; x < resolution; x++)for(let z = 0; z < resolution; z++){\n            position.set(minStart + x * step, minStart + y * step, minStart + z * step);\n            box.min.setScalar(-0.5 * step).add(position);\n            box.max.setScalar(0.5 * step).add(position);\n            const res = bvh.intersectsBox(box, invMat);\n            if (res) {\n                if (!$b62638e05a324a13$var$params.insideOnly) {\n                    worldMatrix.compose(position, quaternion, scale);\n                    $b62638e05a324a13$var$voxels.setMatrixAt(voxelCount, worldMatrix);\n                    $b62638e05a324a13$var$voxels.setColorAt(voxelCount, outsideColor);\n                    $b62638e05a324a13$var$voxels.instanceMatrix.needsUpdate = true;\n                    $b62638e05a324a13$var$voxels.instanceColor.needsUpdate = true;\n                    voxelCount++;\n                }\n            } else if ($b62638e05a324a13$var$params.solid) {\n                // transform into the local frame of the model\n                ray.origin.copy(position).applyMatrix4(invMat);\n                // If we hit a face backside we know we're inside the mesh. Alternatively we\n                // could check if we jot an odd number of faces when checking all intersections.\n                const res = bvh.raycastFirst(ray, 2);\n                if (res && res.face.normal.dot(ray.direction) > 0.0) {\n                    worldMatrix.compose(position, quaternion, scale);\n                    $b62638e05a324a13$var$voxels.setMatrixAt(voxelCount, worldMatrix);\n                    $b62638e05a324a13$var$voxels.setColorAt(voxelCount, insideColor);\n                    $b62638e05a324a13$var$voxels.instanceMatrix.needsUpdate = true;\n                    $b62638e05a324a13$var$voxels.instanceColor.needsUpdate = true;\n                    voxelCount++;\n                }\n            }\n            $b62638e05a324a13$var$voxels.count = voxelCount;\n            yield;\n        }\n    }\n    $b62638e05a324a13$var$voxels.count = voxelCount;\n}\nfunction $b62638e05a324a13$var$render() {\n    $b62638e05a324a13$var$stats.update();\n    requestAnimationFrame($b62638e05a324a13$var$render);\n    $b62638e05a324a13$var$scene.updateMatrixWorld(true);\n    // kick off a new voxelization task\n    if ($b62638e05a324a13$var$needsUpdate) {\n        $b62638e05a324a13$var$voxelTask = $b62638e05a324a13$var$rebuildVoxels();\n        $b62638e05a324a13$var$needsUpdate = false;\n    }\n    // tick the task forward\n    if ($b62638e05a324a13$var$voxelTask) {\n        let startTime = window.performance.now();\n        while(window.performance.now() - startTime < 16){\n            const res = $b62638e05a324a13$var$voxelTask.next();\n            if (res.done) {\n                $b62638e05a324a13$var$voxelTask = null;\n                break;\n            }\n        }\n    }\n    if ($b62638e05a324a13$var$boxHelper) {\n        $b62638e05a324a13$var$boxHelper.object.scale.setScalar($b62638e05a324a13$var$params.scale);\n        $b62638e05a324a13$var$boxHelper.object.updateMatrixWorld(true);\n        $b62638e05a324a13$var$boxHelper.update();\n    }\n    // hide the models\n    for(const key in $b62638e05a324a13$var$models){\n        const info = $b62638e05a324a13$var$models[key];\n        if (info.model) info.model.visible = false;\n    }\n    // show the select model\n    const { model: model } = $b62638e05a324a13$var$models[$b62638e05a324a13$var$params.model];\n    if (model) {\n        model.visible = $b62638e05a324a13$var$params.displayMesh;\n        $b62638e05a324a13$var$boxHelper.visible = $b62638e05a324a13$var$params.displayBounds;\n    }\n    $b62638e05a324a13$var$renderer.render($b62638e05a324a13$var$scene, $b62638e05a324a13$var$camera);\n}\n\n\n//# sourceMappingURL=voxelize.87c0ff13.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","import {\n\tBoxGeometry,\n\tVector3\n} from 'three';\n\nconst _tempNormal = new Vector3();\n\nfunction getUv( faceDirVector, normal, uvAxis, projectionAxis, radius, sideLength ) {\n\n\tconst totArcLength = 2 * Math.PI * radius / 4;\n\n\t// length of the planes between the arcs on each axis\n\tconst centerLength = Math.max( sideLength - 2 * radius, 0 );\n\tconst halfArc = Math.PI / 4;\n\n\t// Get the vector projected onto the Y plane\n\t_tempNormal.copy( normal );\n\t_tempNormal[ projectionAxis ] = 0;\n\t_tempNormal.normalize();\n\n\t// total amount of UV space alloted to a single arc\n\tconst arcUvRatio = 0.5 * totArcLength / ( totArcLength + centerLength );\n\n\t// the distance along one arc the point is at\n\tconst arcAngleRatio = 1.0 - ( _tempNormal.angleTo( faceDirVector ) / halfArc );\n\n\tif ( Math.sign( _tempNormal[ uvAxis ] ) === 1 ) {\n\n\t\treturn arcAngleRatio * arcUvRatio;\n\n\t} else {\n\n\t\t// total amount of UV space alloted to the plane between the arcs\n\t\tconst lenUv = centerLength / ( totArcLength + centerLength );\n\t\treturn lenUv + arcUvRatio + arcUvRatio * ( 1.0 - arcAngleRatio );\n\n\t}\n\n}\n\nclass RoundedBoxGeometry extends BoxGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, segments = 2, radius = 0.1 ) {\n\n\t\t// ensure segments is odd so we have a plane connecting the rounded corners\n\t\tsegments = segments * 2 + 1;\n\n\t\t// ensure radius isn't bigger than shortest side\n\t\tradius = Math.min( width / 2, height / 2, depth / 2, radius );\n\n\t\tsuper( 1, 1, 1, segments, segments, segments );\n\n\t\t// if we just have one segment we're the same as a regular box\n\t\tif ( segments === 1 ) return;\n\n\t\tconst geometry2 = this.toNonIndexed();\n\n\t\tthis.index = null;\n\t\tthis.attributes.position = geometry2.attributes.position;\n\t\tthis.attributes.normal = geometry2.attributes.normal;\n\t\tthis.attributes.uv = geometry2.attributes.uv;\n\n\t\t//\n\n\t\tconst position = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst box = new Vector3( width, height, depth ).divideScalar( 2 ).subScalar( radius );\n\n\t\tconst positions = this.attributes.position.array;\n\t\tconst normals = this.attributes.normal.array;\n\t\tconst uvs = this.attributes.uv.array;\n\n\t\tconst faceTris = positions.length / 6;\n\t\tconst faceDirVector = new Vector3();\n\t\tconst halfSegmentSize = 0.5 / segments;\n\n\t\tfor ( let i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tposition.fromArray( positions, i );\n\t\t\tnormal.copy( position );\n\t\t\tnormal.x -= Math.sign( normal.x ) * halfSegmentSize;\n\t\t\tnormal.y -= Math.sign( normal.y ) * halfSegmentSize;\n\t\t\tnormal.z -= Math.sign( normal.z ) * halfSegmentSize;\n\t\t\tnormal.normalize();\n\n\t\t\tpositions[ i + 0 ] = box.x * Math.sign( position.x ) + normal.x * radius;\n\t\t\tpositions[ i + 1 ] = box.y * Math.sign( position.y ) + normal.y * radius;\n\t\t\tpositions[ i + 2 ] = box.z * Math.sign( position.z ) + normal.z * radius;\n\n\t\t\tnormals[ i + 0 ] = normal.x;\n\t\t\tnormals[ i + 1 ] = normal.y;\n\t\t\tnormals[ i + 2 ] = normal.z;\n\n\t\t\tconst side = Math.floor( i / faceTris );\n\n\t\t\tswitch ( side ) {\n\n\t\t\t\tcase 0: // right\n\n\t\t\t\t\t// generate UVs along Z then Y\n\t\t\t\t\tfaceDirVector.set( 1, 0, 0 );\n\t\t\t\t\tuvs[ j + 0 ] = getUv( faceDirVector, normal, 'z', 'y', radius, depth );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'z', radius, height );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // left\n\n\t\t\t\t\t// generate UVs along Z then Y\n\t\t\t\t\tfaceDirVector.set( - 1, 0, 0 );\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'z', 'y', radius, depth );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'z', radius, height );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // top\n\n\t\t\t\t\t// generate UVs along X then Z\n\t\t\t\t\tfaceDirVector.set( 0, 1, 0 );\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'x', 'z', radius, width );\n\t\t\t\t\tuvs[ j + 1 ] = getUv( faceDirVector, normal, 'z', 'x', radius, depth );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // bottom\n\n\t\t\t\t\t// generate UVs along X then Z\n\t\t\t\t\tfaceDirVector.set( 0, - 1, 0 );\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'x', 'z', radius, width );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'z', 'x', radius, depth );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 4: // front\n\n\t\t\t\t\t// generate UVs along X then Y\n\t\t\t\t\tfaceDirVector.set( 0, 0, 1 );\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'x', 'y', radius, width );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'x', radius, height );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 5: // back\n\n\t\t\t\t\t// generate UVs along X then Y\n\t\t\t\t\tfaceDirVector.set( 0, 0, - 1 );\n\t\t\t\t\tuvs[ j + 0 ] = getUv( faceDirVector, normal, 'x', 'y', radius, width );\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'x', radius, height );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nexport { RoundedBoxGeometry };\n","import { Box3, BufferAttribute } from 'three';\nimport { MeshBVH } from '../core/MeshBVH.js';\nimport { WorkerBase } from './utils/WorkerBase.js';\n\nexport class GenerateMeshBVHWorker extends WorkerBase {\n\n\tconstructor() {\n\n\t\tconst worker = new Worker( new URL( './generateMeshBVH.worker.js', import.meta.url ), { type: 'module' } );\n\t\tsuper( worker );\n\t\tthis.name = 'GenerateMeshBVHWorker';\n\n\t}\n\n\trunTask( worker, geometry, options = {} ) {\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tif (\n\t\t\t\tgeometry.getAttribute( 'position' ).isInterleavedBufferAttribute ||\n\t\t\t\tgeometry.index && geometry.index.isInterleavedBufferAttribute\n\t\t\t) {\n\n\t\t\t\tthrow new Error( 'GenerateMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.' );\n\n\t\t\t}\n\n\t\t\tworker.onerror = e => {\n\n\t\t\t\treject( new Error( `GenerateMeshBVHWorker: ${ e.message }` ) );\n\n\t\t\t};\n\n\t\t\tworker.onmessage = e => {\n\n\t\t\t\tconst { data } = e;\n\n\t\t\t\tif ( data.error ) {\n\n\t\t\t\t\treject( new Error( data.error ) );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( data.serialized ) {\n\n\t\t\t\t\tconst { serialized, position } = data;\n\t\t\t\t\tconst bvh = MeshBVH.deserialize( serialized, geometry, { setIndex: false } );\n\t\t\t\t\tconst boundsOptions = Object.assign( {\n\n\t\t\t\t\t\tsetBoundingBox: true,\n\n\t\t\t\t\t}, options );\n\n\t\t\t\t\t// we need to replace the arrays because they're neutered entirely by the\n\t\t\t\t\t// webworker transfer.\n\t\t\t\t\tgeometry.attributes.position.array = position;\n\t\t\t\t\tif ( serialized.index ) {\n\n\t\t\t\t\t\tif ( geometry.index ) {\n\n\t\t\t\t\t\t\tgeometry.index.array = serialized.index;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst newIndex = new BufferAttribute( serialized.index, 1, false );\n\t\t\t\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boundsOptions.setBoundingBox ) {\n\n\t\t\t\t\t\tgeometry.boundingBox = bvh.getBoundingBox( new Box3() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( options.onProgress ) {\n\n\t\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( bvh );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( options.onProgress ) {\n\n\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tconst index = geometry.index ? geometry.index.array : null;\n\t\t\tconst position = geometry.attributes.position.array;\n\t\t\tconst transferable = [ position ];\n\t\t\tif ( index ) {\n\n\t\t\t\ttransferable.push( index );\n\n\t\t\t}\n\n\t\t\tworker.postMessage( {\n\n\t\t\t\tindex,\n\t\t\t\tposition,\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\tonProgress: null,\n\t\t\t\t\tincludedProgressCallback: Boolean( options.onProgress ),\n\t\t\t\t\tgroups: [ ... geometry.groups ],\n\t\t\t\t},\n\n\t\t\t}, transferable.map( arr => arr.buffer ).filter( v => ( typeof SharedArrayBuffer === 'undefined' ) || ! ( v instanceof SharedArrayBuffer ) ) );\n\n\t\t} );\n\n\t}\n\n}\n","export class WorkerBase {\n\n\tconstructor( worker ) {\n\n\t\tthis.name = 'WorkerBase';\n\t\tthis.running = false;\n\t\tthis.worker = worker;\n\t\tthis.worker.onerror = e => {\n\n\t\t\tif ( e.message ) {\n\n\t\t\t\tthrow new Error( `${ this.name }: Could not create Web Worker with error \"${ e.message }\"` );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( `${ this.name }: Could not create Web Worker.` );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\trunTask() {}\n\n\tgenerate( ...args ) {\n\n\t\tif ( this.running ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Already running job.' );\n\n\t\t}\n\n\t\tif ( this.worker === null ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Worker has been disposed.' );\n\n\t\t}\n\n\t\tthis.running = true;\n\n\t\tconst promise = this.runTask( this.worker, ...args );\n\t\tpromise.finally( () => {\n\n\t\t\tthis.running = false;\n\n\t\t} );\n\n\t\treturn promise;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.worker.terminate();\n\t\tthis.worker = null;\n\n\t}\n\n}\n","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(\"generateMeshBVH.worker.17f4c1c5.js\");\nmodule.exports = workerURL(url.toString(), url.origin, true);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"3xzEA\\\",\\\"voxelize.87c0ff13.js\\\",\\\"6J6WW\\\",\\\"generateMeshBVH.worker.17f4c1c5.js\\\",\\\"acVmZ\\\",\\\"generateMeshBVH.worker.aad48e6e.js\\\",\\\"gr8Yf\\\",\\\"asyncGenerate.22609466.js\\\",\\\"j19h5\\\",\\\"asyncGenerate.e8b1599c.js\\\",\\\"30Pwg\\\",\\\"asyncGenerate.77ce35af.js\\\",\\\"2tzBs\\\",\\\"characterMovement.89c1b67b.js\\\",\\\"6UuCC\\\",\\\"characterMovement.5fc59dbe.js\\\",\\\"6mMEU\\\",\\\"characterMovement.fc8349f1.js\\\",\\\"i0zVc\\\",\\\"clippedEdges.dcf40b33.js\\\"]\"));","import * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport Stats from 'stats.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { MeshBVH } from '..';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry.js';\nimport { GenerateMeshBVHWorker } from '../src/workers/GenerateMeshBVHWorker.js';\n\nlet renderer, camera, scene, gui, stats, outputContainer;\nlet voxels, controls, boxHelper;\nlet needsUpdate = false;\nlet voxelTask = null;\n\nconst params = {\n\tmodel: 'Torus Knot',\n\tscale: 0.75,\n\tresolution: 30,\n\tsolid: true,\n\tdisplayMesh: true,\n\tdisplayBounds: false,\n\tinsideOnly: false,\n\trebuild: () => needsUpdate = true,\n};\n\nconst models = {};\n\ninit();\nrender();\n\nfunction init() {\n\n\tconst bgColor = 0x161e1d;\n\n\toutputContainer = document.getElementById( 'output' );\n\n\t// renderer setup\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new THREE.Scene();\n\n\tconst light = new THREE.DirectionalLight( 0xffffff, 1 );\n\tlight.position.set( 3, 6, 9 );\n\tscene.add( light );\n\n\tconst revLight = new THREE.DirectionalLight( 0xffffff, 0.1 );\n\trevLight.position.set( - 3, - 6, - 9 );\n\tscene.add( revLight );\n\n\tconst ambient = new THREE.AmbientLight( 0xffffff, 0.25 );\n\tscene.add( ambient );\n\n\t// camera setup\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 50 );\n\tcamera.position.set( 1, 0.5, 1 );\n\tcamera.far = 100;\n\tcamera.updateProjectionMatrix();\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\n\t// stats setup\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\n\tconst wireframeMaterial = new THREE.MeshBasicMaterial( {\n\n\t\ttransparent: true,\n\t\twireframe: true,\n\t\tdepthWrite: false,\n\t\topacity: 0.02,\n\n\t} );\n\n\t// load the model\n\tnew GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.load( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/happy-buddha/buddha.glb', gltf => {\n\n\t\t\tconst model = gltf.scene.children[ 0 ];\n\t\t\tmodel.geometry.center();\n\t\t\tmodel.material = wireframeMaterial;\n\t\t\tmodel.scale.setScalar( 1.5 );\n\t\t\tmodel.rotation.y = - Math.PI / 2;\n\n\t\t\tconst generator = new GenerateMeshBVHWorker();\n\t\t\tgenerator.generate( model.geometry ).then( bvh => {\n\n\t\t\t\tscene.add( model );\n\t\t\t\tmodels[ 'Buddha' ] = { model, bvh };\n\t\t\t\tif ( params.model === 'Buddha' ) {\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\tnew GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.load( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/stanford-bunny/bunny.glb', gltf => {\n\n\t\t\tconst model = gltf.scene.children[ 0 ];\n\t\t\tmodel.geometry.center();\n\t\t\tmodel.material = wireframeMaterial;\n\t\t\tmodel.rotation.y = Math.PI / 2;\n\t\t\tmodel.scale.setScalar( 0.65 );\n\n\t\t\tconst generator = new GenerateMeshBVHWorker();\n\t\t\tgenerator.generate( model.geometry ).then( bvh => {\n\n\t\t\t\tscene.add( model );\n\t\t\t\tmodels[ 'Bunny' ] = { model, bvh };\n\t\t\t\tif ( params.model === 'Bunny' ) {\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t{\n\n\t\tconst model = new THREE.Mesh( new THREE.TorusKnotGeometry( 0.3, 0.1, 400, 60 ), wireframeMaterial );\n\t\tconst bvh = new MeshBVH( model.geometry );\n\t\tscene.add( model );\n\n\t\tmodels[ 'Torus Knot' ] = {\n\t\t\tbvh: bvh,\n\t\t\tmodel: model,\n\t\t};\n\t\tneedsUpdate = true;\n\n\t}\n\n\tmodels[ 'Buddha' ] = { model: null, bvh: null };\n\tmodels[ 'Bunny' ] = { model: null, bvh: null };\n\n\tconst boxHelperMesh = new THREE.Mesh( new THREE.BoxGeometry() );\n\tboxHelper = new THREE.BoxHelper( boxHelperMesh, 0xffffff );\n\tboxHelper.material.opacity = 0.35;\n\tboxHelper.material.transparent = true;\n\tscene.add( boxHelper );\n\n\tgui = new GUI();\n\tgui.add( params, 'model', Object.keys( models ) ).onChange( () => {\n\n\t\tneedsUpdate = true;\n\n\t} );\n\n\tconst computeFolder = gui.addFolder( 'voxelize' );\n\tcomputeFolder.add( params, 'resolution', 5, 75, 1 ).onChange( () => {\n\n\t\tneedsUpdate = true;\n\n\t} );\n\tcomputeFolder.add( params, 'scale', 0.1, 4 ).onChange( () => {\n\n\t\tneedsUpdate = true;\n\n\t} );\n\tcomputeFolder.add( params, 'solid' ).onChange( () => {\n\n\t\tneedsUpdate = true;\n\n\t} );\n\tcomputeFolder.add( params, 'insideOnly' ).onChange( () => {\n\n\t\tneedsUpdate = true;\n\n\t} );\n\tcomputeFolder.add( params, 'rebuild' );\n\n\tconst helpersFolder = gui.addFolder( 'helpers' );\n\thelpersFolder.add( params, 'displayMesh' );\n\thelpersFolder.add( params, 'displayBounds' );\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n}\n\n// regenerate the mesh and bvh\nfunction* rebuildVoxels() {\n\n\tconst resolution = params.resolution;\n\tconst totalCount = resolution ** 3;\n\tconst dimensions = params.scale;\n\tconst step = dimensions / resolution;\n\tconst outsideColor = new THREE.Color( 0xffffff );\n\tconst insideColor = new THREE.Color( 0xFFC107 ).convertSRGBToLinear();\n\tif ( voxels && voxels.instanceMatrix.count !== totalCount ) {\n\n\t\tvoxels.material.dispose();\n\t\tvoxels.dispose();\n\t\tvoxels.parent.remove( voxels );\n\t\tvoxels = null;\n\n\t}\n\n\tconst { model, bvh } = models[ params.model ];\n\tif ( ! model ) {\n\n\t\treturn;\n\n\t}\n\n\tif ( ! voxels ) {\n\n\t\t// set color here to force a color buffer to initialize\n\t\tvoxels = new THREE.InstancedMesh( new RoundedBoxGeometry( 1, 1, 1, 4, 0.1 ), new THREE.MeshStandardMaterial(), totalCount );\n\t\tvoxels.setColorAt( 0, outsideColor );\n\t\tscene.add( voxels );\n\n\t}\n\n\tconst minStart = ( - dimensions / 2.0 ) + step * 0.5;\n\tconst position = new THREE.Vector3();\n\tconst quaternion = new THREE.Quaternion();\n\tconst scale = new THREE.Vector3().setScalar( step );\n\tconst worldMatrix = new THREE.Matrix4();\n\tconst box = new THREE.Box3();\n\tconst invMat = new THREE.Matrix4().copy( model.matrixWorld ).invert();\n\n\tconst ray = new THREE.Ray();\n\tray.direction.set( 0, 0, 1 );\n\n\tlet voxelCount = 0;\n\n\tfor ( let y = 0; y < resolution; y ++ ) {\n\n\t\tfor ( let x = 0; x < resolution; x ++ ) {\n\n\t\t\tfor ( let z = 0; z < resolution; z ++ ) {\n\n\t\t\t\tposition.set(\n\t\t\t\t\tminStart + x * step,\n\t\t\t\t\tminStart + y * step,\n\t\t\t\t\tminStart + z * step,\n\t\t\t\t);\n\n\t\t\t\tbox.min.setScalar( - 0.5 * step ).add( position );\n\t\t\t\tbox.max.setScalar( 0.5 * step ).add( position );\n\n\t\t\t\tconst res = bvh.intersectsBox( box, invMat );\n\t\t\t\tif ( res ) {\n\n\t\t\t\t\tif ( ! params.insideOnly ) {\n\n\t\t\t\t\t\tworldMatrix.compose( position, quaternion, scale );\n\t\t\t\t\t\tvoxels.setMatrixAt( voxelCount, worldMatrix );\n\t\t\t\t\t\tvoxels.setColorAt( voxelCount, outsideColor );\n\t\t\t\t\t\tvoxels.instanceMatrix.needsUpdate = true;\n\t\t\t\t\t\tvoxels.instanceColor.needsUpdate = true;\n\n\t\t\t\t\t\tvoxelCount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( params.solid ) {\n\n\t\t\t\t\t// transform into the local frame of the model\n\t\t\t\t\tray.origin.copy( position ).applyMatrix4( invMat );\n\n\t\t\t\t\t// If we hit a face backside we know we're inside the mesh. Alternatively we\n\t\t\t\t\t// could check if we jot an odd number of faces when checking all intersections.\n\t\t\t\t\tconst res = bvh.raycastFirst( ray, 2 );\n\t\t\t\t\tif ( res && res.face.normal.dot( ray.direction ) > 0.0 ) {\n\n\t\t\t\t\t\tworldMatrix.compose( position, quaternion, scale );\n\t\t\t\t\t\tvoxels.setMatrixAt( voxelCount, worldMatrix );\n\t\t\t\t\t\tvoxels.setColorAt( voxelCount, insideColor );\n\t\t\t\t\t\tvoxels.instanceMatrix.needsUpdate = true;\n\t\t\t\t\t\tvoxels.instanceColor.needsUpdate = true;\n\n\t\t\t\t\t\tvoxelCount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvoxels.count = voxelCount;\n\t\t\t\tyield;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvoxels.count = voxelCount;\n\n}\n\nfunction render() {\n\n\tstats.update();\n\trequestAnimationFrame( render );\n\n\tscene.updateMatrixWorld( true );\n\n\t// kick off a new voxelization task\n\tif ( needsUpdate ) {\n\n\t\tvoxelTask = rebuildVoxels();\n\t\tneedsUpdate = false;\n\n\t}\n\n\t// tick the task forward\n\tif ( voxelTask ) {\n\n\t\tlet startTime = window.performance.now();\n\t\twhile ( window.performance.now() - startTime < 16 ) {\n\n\t\t\tconst res = voxelTask.next();\n\t\t\tif ( res.done ) {\n\n\t\t\t\tvoxelTask = null;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tif ( boxHelper ) {\n\n\t\tboxHelper.object.scale.setScalar( params.scale );\n\t\tboxHelper.object.updateMatrixWorld( true );\n\t\tboxHelper.update();\n\n\t}\n\n\t// hide the models\n\tfor ( const key in models ) {\n\n\t\tconst info = models[ key ];\n\t\tif ( info.model ) info.model.visible = false;\n\n\t}\n\n\t// show the select model\n\tconst { model } = models[ params.model ];\n\tif ( model ) {\n\n\t\tmodel.visible = params.displayMesh;\n\t\tboxHelper.visible = params.displayBounds;\n\n\t}\n\n\trenderer.render( scene, camera );\n\n}\n"],"names":["$b62638e05a324a13$var$renderer","$b62638e05a324a13$var$camera","$b62638e05a324a13$var$scene","$b62638e05a324a13$var$gui","$b62638e05a324a13$var$stats","$b62638e05a324a13$var$voxels","$b62638e05a324a13$var$boxHelper","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","f","a","c","appendChild","dom","u","d","children","style","display","l","document","createElement","cssText","addEventListener","preventDefault","k","performance","Date","now","g","r","Panel","h","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","Math","round","window","devicePixelRatio","m","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","$793f77e8093852e4$export$418f4e74cfe71a96","$ilwiq","$793f77e8093852e4$var$_tempNormal","Vector3","$793f77e8093852e4$var$getUv","faceDirVector","normal","uvAxis","projectionAxis","radius","sideLength","totArcLength","PI","centerLength","copy","normalize","arcUvRatio","arcAngleRatio","angleTo","sign","lenUv","BoxGeometry","constructor","depth","segments","geometry2","toNonIndexed","index","attributes","position","uv","box","divideScalar","subScalar","positions","array","normals","uvs","faceTris","halfSegmentSize","j","fromArray","x","y","z","floor","$62b3d05905f83386$export$426cc6213ad628cf","$ff8ed","$77YCt","WorkerBase","Worker","name","runTask","worker","geometry","options","Promise","resolve","reject","getAttribute","isInterleavedBufferAttribute","onerror","message","onmessage","data","error","serialized","bvh","MeshBVH","deserialize","setIndex","boundsOptions","assign","setBoundingBox","newIndex","BufferAttribute","boundingBox","getBoundingBox","Box3","onProgress","progress","transferable","push","postMessage","includedProgressCallback","Boolean","groups","map","arr","buffer","filter","SharedArrayBuffer","$5308359e4b33977a$export$8dbf7c43841b75b7","running","generate","args","promise","finally","dispose","terminate","$7ryUf","$8a4fc930af686efe$var$url","URL","url","toString","origin","workerUrl","isESM","location","source","JSON","stringify","createObjectURL","Blob","type","parse","$7lx9d","$kp7Te","$c8CJQ","$jiuw3","$5Rd1x","$apoN1","$8todg","$b62638e05a324a13$var$needsUpdate","$b62638e05a324a13$var$voxelTask","$b62638e05a324a13$var$params","model","scale","resolution","solid","displayMesh","displayBounds","insideOnly","rebuild","$b62638e05a324a13$var$models","$b62638e05a324a13$var$init","getElementById","WebGLRenderer","antialias","setPixelRatio","setSize","innerWidth","innerHeight","setClearColor","outputEncoding","sRGBEncoding","body","Scene","light","DirectionalLight","add","revLight","ambient","AmbientLight","PerspectiveCamera","far","updateProjectionMatrix","OrbitControls","__esModule","default","wireframeMaterial","MeshBasicMaterial","transparent","wireframe","depthWrite","opacity","GLTFLoader","setMeshoptDecoder","MeshoptDecoder","load","gltf","scene","center","material","setScalar","rotation","generator","GenerateMeshBVHWorker","then","Mesh","TorusKnotGeometry","boxHelperMesh","BoxHelper","GUI","keys","onChange","computeFolder","addFolder","helpersFolder","aspect","$b62638e05a324a13$var$render","requestAnimationFrame","updateMatrixWorld","$b62638e05a324a13$var$rebuildVoxels","totalCount","dimensions","step","outsideColor","Color","insideColor","convertSRGBToLinear","instanceMatrix","count","parent","remove","InstancedMesh","RoundedBoxGeometry","MeshStandardMaterial","setColorAt","minStart","quaternion","Quaternion","worldMatrix","Matrix4","invMat","matrixWorld","invert","ray","Ray","direction","voxelCount","intersectsBox","compose","setMatrixAt","needsUpdate","instanceColor","applyMatrix4","res","raycastFirst","face","dot","startTime","next","done","key","object","info","visible","render"],"version":3,"file":"voxelize.87c0ff13.js.map"}